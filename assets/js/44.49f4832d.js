(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{369:function(e,r,t){"use strict";t.r(r);var n=t(4),a=Object(n.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"编程面试大学"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#编程面试大学"}},[e._v("#")]),e._v(" 编程面试大学")]),e._v(" "),r("blockquote",[r("p",[e._v("原先我为了成为一个软件工程师而建立这份简单的学习主题清单， 但这份清单随着时间的推移而膨胀成今天这样。在做完这份清单上的每个目标后，"),r("a",{attrs:{href:"https://startupnextdoor.com/ive-been-acquired-by-amazon/?src=ciu",target:"_blank",rel:"noopener noreferrer"}},[e._v("我成为了 Amazon 的软件开发工程师"),r("OutboundLink")],1),e._v("! 你或许不需要像我一样学习这么多。但是，让你成为一位称职工程师所需要的知识都在这里了。")]),e._v(" "),r("p",[e._v("我每天自学8~12小时，这样持续了好几个月。这是我的故事："),r("a",{attrs:{href:"https://medium.freecodecamp.org/why-i-studied-full-time-for-8-months-for-a-google-interview-cc662ce9bb13",target:"_blank",rel:"noopener noreferrer"}},[e._v("为什么我为了 Google 面试而自学了8个月"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("p",[r("strong",[e._v("请注意:")]),e._v(" 你不需要像我一样那么努力学习。我在一些不必要的事情上浪费了很多时间。关于这个问题下面有更多信息。我会帮助你节省宝贵的时间，让你达到目标。\n在这份清单内的主题会让你拥有足够的知识去面对几乎每家软件公司的技术面试，包括科技巨头：Amazon、Facebook、Google，以及 Microsoft。")]),e._v(" "),r("p",[r("strong",[e._v("祝你好运!")])])]),e._v(" "),r("div",{attrs:{align:"center"}},[r("hr"),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/sponsors/jwasham"}},[r("strong",[e._v("成为赞助商")]),e._v(" 并支持编程大学！")])]),e._v(" "),r("hr")]),e._v(" "),r("h2",{attrs:{id:"这是"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#这是"}},[e._v("#")]),e._v(" 这是？")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://d3j2pkmjtin6ou.cloudfront.net/coding-at-the-whiteboard-silicon-valley.png",alt:"白板上编程 ———— 来自 HBO 频道的剧集，“硅谷”"}})]),e._v(" "),r("p",[e._v("这是我为成为一家大公司的软件工程师制定的多月学习计划。")]),e._v(" "),r("p",[r("strong",[e._v("要求:")])]),e._v(" "),r("ul",[r("li",[e._v("一点编程经验（变量、循环、方法/函数等）")]),e._v(" "),r("li",[e._v("耐心")]),e._v(" "),r("li",[e._v("时间")])]),e._v(" "),r("p",[e._v("注意，这是一份关于 "),r("strong",[e._v("软件工程")]),e._v(" 的学习计划，而不是前端工程或全栈开发。\n这些职业路径有很多详细的路线图和课程资料可以在其他地方找到（请参阅 https://roadmap.sh/ 获取更多信息）。")]),e._v(" "),r("p",[e._v("在大学计算机科学专业中，有很多知识需要学习，但是只掌握大约75%的内容就足够应对面试了，这也是我在这里涵盖的内容。\n如果你想进行完整的自学计算机科学项目，可以参考Kamran Ahmed的计算机科学路线图：https://roadmap.sh/computer-science。")]),e._v(" "),r("hr"),e._v(" "),r("h2",{attrs:{id:"目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[e._v("#")]),e._v(" 目录")]),e._v(" "),r("h3",{attrs:{id:"学习计划"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#学习计划"}},[e._v("#")]),e._v(" 学习计划")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E8%BF%99%E6%98%AF"}},[e._v("这是？")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%BA%E4%BD%95%E8%A6%81%E7%94%A8%E5%88%B0%E5%AE%83"}},[e._v("为何要用到它？")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%AE%83"}},[e._v("如何使用它")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%8D%E8%A6%81%E8%A7%89%E5%BE%97%E8%87%AA%E5%B7%B1%E4%B8%8D%E5%A4%9F%E8%81%AA%E6%98%8E"}},[e._v("不要觉得自己不够聪明")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E7%9B%B8%E5%85%B3%E8%A7%86%E9%A2%91%E8%B5%84%E6%BA%90"}},[e._v("相关视频资源")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E9%80%89%E6%8B%A9%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80"}},[e._v("选择编程语言")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95%E7%9A%84%E4%B9%A6%E7%B1%8D"}},[e._v("数据结构和算法的书籍")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87%E4%B9%A6%E7%B1%8D"}},[e._v("面试准备书籍")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%8D%E8%A6%81%E7%8A%AF%E6%88%91%E7%9A%84%E9%94%99%E8%AF%AF"}},[e._v("不要犯我的错误")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%B2%A1%E6%9C%89%E5%8C%85%E5%90%AB%E7%9A%84%E5%86%85%E5%AE%B9"}},[e._v("没有包含的内容")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%97%A5%E5%B8%B8%E8%AE%A1%E5%88%92"}},[e._v("日常计划")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E7%BC%96%E7%A8%8B%E9%97%AE%E9%A2%98%E7%BB%83%E4%B9%A0"}},[e._v("编程问题练习")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E7%BC%96%E7%A8%8B%E9%97%AE%E9%A2%98"}},[e._v("编程问题")])])]),e._v(" "),r("h3",{attrs:{id:"学习的主题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#学习的主题"}},[e._v("#")]),e._v(" 学习的主题")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6--big-o--%E6%B8%90%E8%BF%9B%E5%88%86%E6%9E%90%E6%B3%95"}},[e._v("算法复杂度 / Big-O / 渐进分析法")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84"}},[e._v("数据结构")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E6%95%B0%E7%BB%84arrays"}},[e._v("数组（Arrays）")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E9%93%BE%E8%A1%A8linked-lists"}},[e._v("链表（Linked Lists）")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%A0%86%E6%A0%88stack"}},[e._v("堆栈（Stack）")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E9%98%9F%E5%88%97queue"}},[e._v("队列（Queue）")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%93%88%E5%B8%8C%E8%A1%A8hash-table"}},[e._v("哈希表（Hash table）")])])])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%9B%B4%E5%A4%9A%E7%9A%84%E7%9F%A5%E8%AF%86"}},[e._v("更多的知识")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BEbinary-search"}},[e._v("二分查找（Binary search）")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%8C%89%E4%BD%8D%E8%BF%90%E7%AE%97bitwise-operations"}},[e._v("按位运算（Bitwise operations）")])])])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%A0%91trees"}},[e._v("树（Trees）")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E6%A0%91-%E4%BB%8B%E7%BB%8D"}},[e._v("树-介绍")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91binary-search-treesbsts"}},[e._v("二叉查找树（Binary search trees）：BSTs")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%A0%86heap--%E4%BC%98%E5%85%88%E7%BA%A7%E9%98%9F%E5%88%97priority-queue--%E4%BA%8C%E5%8F%89%E5%A0%86binary-heap"}},[e._v("堆（Heap） / 优先级队列（Priority Queue） / 二叉堆（Binary Heap）")])]),e._v(" "),r("li",[e._v("平衡搜索树 (总体概念，不涉及细节)")]),e._v(" "),r("li",[e._v("遍历：前序、中序、后序、BFS、DFS")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%8E%92%E5%BA%8Fsorting"}},[e._v("排序")]),e._v(" "),r("ul",[r("li",[e._v("选择排序（selection）")]),e._v(" "),r("li",[e._v("插入排序（insertion）")]),e._v(" "),r("li",[e._v("堆排序（heapsort）")]),e._v(" "),r("li",[e._v("快速排序（quicksort）")]),e._v(" "),r("li",[e._v("归并排序（merge sort）")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%BEgraphs"}},[e._v("图（Graphs）")]),e._v(" "),r("ul",[r("li",[e._v("有向图（directed）")]),e._v(" "),r("li",[e._v("无向图（undirected）")]),e._v(" "),r("li",[e._v("邻接矩阵（adjacency matrix）")]),e._v(" "),r("li",[e._v("邻接表（adjacency list）")]),e._v(" "),r("li",[e._v("遍历：广度优先(BFS), 深度优先(DFS)")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%9B%B4%E5%A4%9A%E7%9F%A5%E8%AF%86"}},[e._v("更多知识")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E9%80%92%E5%BD%92recursion"}},[e._v("递归")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92dynamic-programming"}},[e._v("动态规划")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F"}},[e._v("设计模式")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E7%BB%84%E5%90%88combinatorics-n-%E4%B8%AD%E9%80%89-k-%E4%B8%AA--%E6%A6%82%E7%8E%87probability"}},[e._v("组合 & 概率")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#np-np-%E5%AE%8C%E5%85%A8%E5%92%8C%E8%BF%91%E4%BC%BC%E7%AE%97%E6%B3%95"}},[e._v("NP, NP-完全和近似算法")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E7%BC%93%E5%AD%98cache"}},[e._v("缓存")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E8%BF%9B%E7%A8%8Bprocesse%E5%92%8C%E7%BA%BF%E7%A8%8Bthread"}},[e._v("进程和线程")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%B5%8B%E8%AF%95"}},[e._v("测试")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E8%B0%83%E5%BA%A6"}},[e._v("调度")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%90%9C%E7%B4%A2%E5%92%8C%E6%93%8D%E4%BD%9C"}},[e._v("字符串搜索和操作")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%AD%97%E5%85%B8%E6%A0%91tries"}},[e._v("字典树（Tries）")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%B5%AE%E7%82%B9%E6%95%B0"}},[e._v("浮点数")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#unicode"}},[e._v("Unicode")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%AD%97%E8%8A%82%E5%BA%8FEndianness"}},[e._v("字节顺序")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E7%BD%91%E7%BB%9C%E8%A7%86%E9%A2%91"}},[e._v("网络")])])])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%9C%80%E7%BB%88%E5%A4%8D%E4%B9%A0"}},[e._v("最终复习")])])]),e._v(" "),r("h3",{attrs:{id:"获得工作机会"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#获得工作机会"}},[e._v("#")]),e._v(" 获得工作机会")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E6%9B%B4%E6%96%B0%E4%BD%A0%E7%9A%84%E7%AE%80%E5%8E%86"}},[e._v("更新你的简历")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%89%BE%E5%B7%A5%E4%BD%9C"}},[e._v("找工作")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E9%9D%A2%E8%AF%95%E6%B5%81%E7%A8%8B%E4%B8%8E%E4%B8%80%E8%88%AC%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87"}},[e._v("面试流程与一般面试准备")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%BD%93%E9%9D%A2%E8%AF%95%E6%9D%A5%E4%B8%B4%E7%9A%84%E6%97%B6%E5%80%99"}},[e._v("当面试来临的时候")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E9%97%AE%E9%9D%A2%E8%AF%95%E5%AE%98%E7%9A%84%E9%97%AE%E9%A2%98"}},[e._v("问面试官的问题")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%BD%93%E4%BD%A0%E8%8E%B7%E5%BE%97%E4%BA%86%E6%A2%A6%E6%83%B3%E7%9A%84%E8%81%8C%E4%BD%8D"}},[e._v("当你获得了梦想的职位")])])]),e._v(" "),r("p",[r("strong",[e._v("---------------- 以下所有内容均为可选项 ----------------")])]),e._v(" "),r("h3",{attrs:{id:"可选的额外主题和资源"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#可选的额外主题和资源"}},[e._v("#")]),e._v(" 可选的额外主题和资源")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E9%A2%9D%E5%A4%96%E4%B9%A6%E7%B1%8D"}},[e._v("额外书籍")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%81%E5%8F%AF%E6%89%A9%E5%B1%95%E6%80%A7%E5%92%8C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86"}},[e._v("系统设计、可扩展性和数据处理")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E9%99%84%E5%8A%A0%E5%AD%A6%E4%B9%A0"}},[e._v("附加学习")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E7%BC%96%E8%AF%91%E5%99%A8"}},[e._v("编译器")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#emacs-and-vim"}},[e._v("Emacs and vi(m)")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#unix-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7"}},[e._v("Unix 命令行工具")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BF%A1%E6%81%AF%E8%AE%BA-%E8%A7%86%E9%A2%91"}},[e._v("信息论")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%A5%87%E5%81%B6%E6%A0%A1%E9%AA%8C%E4%BD%8D--%E6%B1%89%E6%98%8E%E7%A0%81-%E8%A7%86%E9%A2%91"}},[e._v("奇偶校验位 & 汉明码 (视频)")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E7%B3%BB%E7%BB%9F%E7%86%B5%E5%80%BCEntropy"}},[e._v("系统熵值")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%AF%86%E7%A0%81%E5%AD%A6"}},[e._v("密码学")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8E%8B%E7%BC%A9"}},[e._v("压缩")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AE%89%E5%85%A8"}},[e._v("计算机安全")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6"}},[e._v("垃圾回收")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%B9%B6%E8%A1%8C%E7%BC%96%E7%A8%8B"}},[e._v("并行编程")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E9%98%9F%E5%88%97%E7%B3%BB%E7%BB%9F"}},[e._v("消息传递，序列化和队列化的系统")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#a*%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95"}},[e._v("A*搜索算法")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2"}},[e._v("快速傅里叶变换")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8"}},[e._v("布隆过滤器")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#hyperloglog"}},[e._v("HyperLogLog")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%B1%80%E9%83%A8%E6%95%8F%E6%84%9F%E5%93%88%E5%B8%8C"}},[e._v("局部敏感哈希")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#van-emde-boas-%E6%A0%91"}},[e._v("van Emde Boas 树")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%A2%9E%E5%BC%BA%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84"}},[e._v("增强数据结构")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%B9%B3%E8%A1%A1%E6%9F%A5%E6%89%BE%E6%A0%91balanced-search-trees"}},[e._v("平衡查找树")]),e._v(" "),r("ul",[r("li",[e._v("AVL 树")]),e._v(" "),r("li",[e._v("伸缩树（Splay tree）")]),e._v(" "),r("li",[e._v("红黑树")]),e._v(" "),r("li",[e._v("2-3 查找树")]),e._v(" "),r("li",[e._v("2-3-4 树(也称 2-4 树)")]),e._v(" "),r("li",[e._v("N-ary (K-ary, M-ary)树")]),e._v(" "),r("li",[e._v("B 树")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"#k-d%E6%A0%91"}},[e._v("k-D 树")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E8%B7%B3%E8%A1%A8"}},[e._v("跳表")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E7%BD%91%E7%BB%9C%E6%B5%81"}},[e._v("网络流")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%8D%E7%9B%B8%E4%BA%A4%E9%9B%86--%E8%81%94%E5%90%88%E6%9F%A5%E6%89%BE"}},[e._v("不相交集 & 联合查找")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%BF%AB%E9%80%9F%E5%A4%84%E7%90%86%E7%9A%84%E6%95%B0%E5%AD%A6"}},[e._v("快速处理的数学")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E6%A0%91%E5%A0%86-treap"}},[e._v("树堆 (Treap)")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92linear-programming%E8%A7%86%E9%A2%91"}},[e._v("线性规划")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E5%87%A0%E4%BD%95%E5%87%B8%E5%8C%85geometry-convex-hull%E8%A7%86%E9%A2%91"}},[e._v("几何：凸包（Geometry, Convex hull）")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6"}},[e._v("离散数学")])])])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%80%E4%BA%9B%E4%B8%BB%E9%A2%98%E7%9A%84%E9%A2%9D%E5%A4%96%E5%86%85%E5%AE%B9"}},[e._v("一些主题的额外内容")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E8%A7%86%E9%A2%91%E7%B3%BB%E5%88%97"}},[e._v("视频系列")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E8%AF%BE%E7%A8%8B"}},[e._v("计算机科学课程")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#%E8%AE%BA%E6%96%87"}},[e._v("论文")])])]),e._v(" "),r("hr"),e._v(" "),r("h2",{attrs:{id:"为何要用到它"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为何要用到它"}},[e._v("#")]),e._v(" 为何要用到它？")]),e._v(" "),r("p",[e._v("如果你想在一家大公司担任软件工程师，这些是你必须了解的事情。")]),e._v(" "),r("p",[e._v("如果你错过了计算机科学的学位，就像我一样，这将帮助你迎头赶上，并节省四年的时间。")]),e._v(" "),r("p",[e._v("当我开始这个项目时，我对堆栈和堆没有任何了解，\n也不知道大O表示法或者关于树的任何东西，也不知道如何遍历图形。\n如果让我编写一个排序算法，相信我它会很糟糕。\n我曾经使用过的每种数据结构都是内置在语言中的，并且我完全不知道它们在底层是如何工作的。\n除非运行中的进程出现“内存不足”错误，否则我从来没有管理过内存，并且那时候就需要找到一种解决方法。\n在我的生活中，我使用过一些多维数组和成千上万个关联数组，但从未从头开始创建数据结构。")]),e._v(" "),r("p",[e._v("这是一个漫长的计划，以至于花费了我数月的时间。若你早已熟悉大部分的知识，那么也许能节省大量的时间。")]),e._v(" "),r("h2",{attrs:{id:"如何使用它"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何使用它"}},[e._v("#")]),e._v(" 如何使用它")]),e._v(" "),r("p",[e._v("下面所有的东西都只是一个概述。因此，你需要由上而下逐一地去处理它。")]),e._v(" "),r("p",[e._v("在学习过程中，我使用 GitHub 特殊语法的 Markdown 去检查计划的进展，包括使用包含任务进度的任务列表。")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown",target:"_blank",rel:"noopener noreferrer"}},[e._v("更多关于 Github-flavored Markdown 的详情"),r("OutboundLink")],1)])]),e._v(" "),r("h3",{attrs:{id:"如果你不想使用-git"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如果你不想使用-git"}},[e._v("#")]),e._v(" 如果你不想使用 Git")]),e._v(" "),r("p",[e._v("在该页面上，单击顶部附近的 Code 按钮，然后单击“Download ZIP”。解压文件，就可以使用文本文件了。")]),e._v(" "),r("p",[e._v("如果你打开一个代码编辑器，你会看到所有格式都很好。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://d3j2pkmjtin6ou.cloudfront.net/how-to-download-as-zip.png",alt:"How to download the repo as a zip file"}})]),e._v(" "),r("h3",{attrs:{id:"如果你不介意-git"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如果你不介意-git"}},[e._v("#")]),e._v(" 如果你不介意 Git")]),e._v(" "),r("p",[e._v("创建一个新的分支，这样你就可以检查类似这样的项目了，只需在方括号中放入一个x：[x]")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("在 GitHub 上 Fork 该仓库： 点击 Fork 按钮，将 "),r("code",[e._v("https://github.com/jwasham/coding-interview-university")]),e._v(" 仓库复制到你的 GitHub 账号中。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://d3j2pkmjtin6ou.cloudfront.net/fork-button.png",alt:"Fork the GitHub repo"}})])]),e._v(" "),r("li",[r("p",[e._v("克隆项目到本地：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("git clone git@github.com:<your_github_username>/coding-interview-university.git\ncd coding-interview-university\ngit remote add upstream https://github.com/jwasham/coding-interview-university\ngit remote set-url --push upstream DISABLE  # 这样你就不会将个人进展推回到原始仓库了。\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br")])])]),e._v(" "),r("li",[r("p",[e._v("在你完成了一些修改后，在框框中打 x：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('git commit -am "Marked personal progress"\ngit pull upstream main  # 将您的分支与原始仓库中的更改保持最新\n  \ngit push # just pushes to your fork\n')])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br")])])])]),e._v(" "),r("h2",{attrs:{id:"不要觉得自己不够聪明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不要觉得自己不够聪明"}},[e._v("#")]),e._v(" 不要觉得自己不够聪明")]),e._v(" "),r("ul",[r("li",[e._v("大多数成功的软件工程师都非常聪明，但他们都有一种觉得自己不够聪明的不安全感。")]),e._v(" "),r("li",[e._v("下面的视频可以帮助你克服这种不安全感：\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=0SARbwvhupQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("天才程序员的神话"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=1i8ylq4j_EY",target:"_blank",rel:"noopener noreferrer"}},[e._v("不要单打独斗：面对技术中的隐形怪物"),r("OutboundLink")],1)])])])]),e._v(" "),r("h2",{attrs:{id:"相关视频资源"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#相关视频资源"}},[e._v("#")]),e._v(" 相关视频资源")]),e._v(" "),r("p",[e._v("部分视频只能通过在 Coursera 或者 Edx 课程上注册登录才能观看。\n这些视频被称为网络公开课程（MOOC）。有时候某些课程需要等待好几个月才能获取，这期间你无法观看这些课程的影片。")]),e._v(" "),r("p",[e._v("很感谢你能帮我把网络公开课程的视频链接转换成公开的，可持续访问的视频源，\n比如 YouTube 视频，以代替那些在线课程的视频。\n此外，一些大学的讲座视频也是我所青睐的。")]),e._v(" "),r("h2",{attrs:{id:"选择编程语言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#选择编程语言"}},[e._v("#")]),e._v(" 选择编程语言")]),e._v(" "),r("p",[e._v("你需要为你做的编程面试选择一种编程语言，\n但你也需要找到一种可以用来学习计算机科学概念的语言。")]),e._v(" "),r("p",[e._v("最好是同一种语言，这样你只需精通其中一种。")]),e._v(" "),r("h3",{attrs:{id:"对于这个学习计划"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#对于这个学习计划"}},[e._v("#")]),e._v(" 对于这个学习计划")]),e._v(" "),r("p",[e._v("在这个学习计划中，我主要使用了两种编程语言：C和Python。")]),e._v(" "),r("ul",[r("li",[e._v("C: 非常底层。它允许你处理指针和内存的分配与释放，因此你能够深入理解数据结构和算法。\n在像Python或Java这样的高级语言中，这些细节被隐藏起来。在日常工作中，这是很好的，\n但当你学习这些底层数据结构时，感受它们与计算机硬件的联系也是非常有益的。\n"),r("ul",[r("li",[e._v("C 语言无处不在。在你学习的过程中，你会在书籍、讲座、视频以及"),r("strong",[e._v("任何地方")]),e._v("看到C语言的例子。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.amazon.com/Programming-Language-Brian-W-Kernighan/dp/0131103628",target:"_blank",rel:"noopener noreferrer"}},[e._v("《C程序设计语言（第2版）》"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("这是一本简短的书，但它会让你很好地掌握C语言，只要稍微练习一下，\n你很快就能熟练使用。理解C语言有助于你了解程序和内存是如何工作的。")]),e._v(" "),r("li",[e._v("你不需要深入研究这本书（甚至不用读完它）。只要阅读到你感觉舒服，并能写一些C语言的代码就可以了。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/lekkas/c-algorithms",target:"_blank",rel:"noopener noreferrer"}},[e._v("书中问题的答案"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[e._v("Python: 现代且非常灵活，我学习它是因为它非常实用，同时在面试中也能让我写更少的代码。")])]),e._v(" "),r("p",[e._v("这是我的个人喜好，当然你可以根据自己的偏好来选择。")]),e._v(" "),r("p",[e._v("也许你并不需要，但以下是一些学习新编程语言的网站：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://exercism.org/tracks",target:"_blank",rel:"noopener noreferrer"}},[e._v("Exercism"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.codewars.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("Codewars"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.hackerearth.com/for-developers/",target:"_blank",rel:"noopener noreferrer"}},[e._v("HackerEarth"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.scaler.com/topics/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Scaler Topics (Java, C++)"),r("OutboundLink")],1)])]),e._v(" "),r("h3",{attrs:{id:"对于你的编程面试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#对于你的编程面试"}},[e._v("#")]),e._v(" 对于你的编程面试")]),e._v(" "),r("p",[e._v("你可以在编程这一环节，使用一种自己用起来较为舒适的语言去完成编程，但对于大公司，你只有三种固定的选择：")]),e._v(" "),r("ul",[r("li",[e._v("C++")]),e._v(" "),r("li",[e._v("Java")]),e._v(" "),r("li",[e._v("Python")])]),e._v(" "),r("p",[e._v("你也可以使用下面两种编程语言，但可能会有某些限制，你需要事先查明：")]),e._v(" "),r("ul",[r("li",[e._v("JavaScript")]),e._v(" "),r("li",[e._v("Ruby")])]),e._v(" "),r("p",[e._v("这是我写的一篇关于选择面试语言的文章：\n"),r("a",{attrs:{href:"https://startupnextdoor.com/important-pick-one-language-for-the-coding-interview/",target:"_blank",rel:"noopener noreferrer"}},[e._v("为编程面试选择一种语言"),r("OutboundLink")],1),e._v("。\n这是我发布帖子所基于的原始文章： "),r("a",{attrs:{href:"https://web.archive.org/web/20210516054124/http://blog.codingforinterviews.com/best-programming-language-jobs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Choosing a Programming Language for Interviews"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("你需要对你所选择的语言感到非常舒适且足够了解。")]),e._v(" "),r("p",[e._v("更多关于语言选择的阅读：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://www.byte-by-byte.com/choose-the-right-language-for-your-coding-interview/",target:"_blank",rel:"noopener noreferrer"}},[e._v("选择适合你的编程面试的语言"),r("OutboundLink")],1)])]),e._v(" "),r("p",[r("RouterLink",{attrs:{to:"/01.知识碎片/programming-language-resources.html"}},[e._v("在此查看相关语言的资源")])],1),e._v(" "),r("h2",{attrs:{id:"数据结构和算法的书籍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据结构和算法的书籍"}},[e._v("#")]),e._v(" 数据结构和算法的书籍")]),e._v(" "),r("p",[e._v("这本书将为你的计算机科学打下基础。")]),e._v(" "),r("p",[e._v("只需选择一种你感到舒适的语言。你将会进行大量阅读和编码工作。")]),e._v(" "),r("h3",{attrs:{id:"c"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#c"}},[e._v("#")]),e._v(" C")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.amazon.com/Algorithms-Parts-1-5-Bundle-Fundamentals/dp/0201756080",target:"_blank",rel:"noopener noreferrer"}},[e._v("C语言中的算法，第1-5部分（捆绑包），第3版"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("基础知识，数据结构，排序，搜索和图算法")])])])]),e._v(" "),r("h3",{attrs:{id:"python"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#python"}},[e._v("#")]),e._v(" Python")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.amazon.com/Structures-Algorithms-Python-Michael-Goodrich/dp/1118290275/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Python数据结构和算法"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("作者：Goodrich、Tamassia、Goldwasser")]),e._v(" "),r("li",[e._v("我非常喜爱这本书，它包含了所有东西")]),e._v(" "),r("li",[e._v("很 Python 的代码")]),e._v(" "),r("li",[e._v("我的读书报告：https://startupnextdoor.com/book-report-data-structures-and-algorithms-in-python/")])])])]),e._v(" "),r("h3",{attrs:{id:"java"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[e._v("#")]),e._v(" Java")]),e._v(" "),r("p",[e._v("你的选择：")]),e._v(" "),r("ul",[r("li",[e._v("Goodrich, Tamassia, Goldwasser\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.amazon.com/Data-Structures-Algorithms-Michael-Goodrich/dp/1118771338/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java数据结构与算法"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("Sedgewick and Wayne:\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.amazon.com/Algorithms-4th-Robert-Sedgewick/dp/032157351X/",target:"_blank",rel:"noopener noreferrer"}},[e._v("算法（第4版）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("免费Coursera课程，涵盖该书内容（由作者授课！）：\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1",target:"_blank",rel:"noopener noreferrer"}},[e._v("算法I"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2",target:"_blank",rel:"noopener noreferrer"}},[e._v("算法II"),r("OutboundLink")],1)])])])])])]),e._v(" "),r("h3",{attrs:{id:"c-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#c-2"}},[e._v("#")]),e._v(" C++")]),e._v(" "),r("p",[e._v("你的选择：")]),e._v(" "),r("ul",[r("li",[e._v("Goodrich, Tamassia, and Mount\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.amazon.com/Data-Structures-Algorithms-Michael-Goodrich/dp/0470383275",target:"_blank",rel:"noopener noreferrer"}},[e._v("C++数据结构与算法（第2版）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("Sedgewick and Wayne\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.amazon.com/Algorithms-Parts-1-4-Fundamentals-Structure/dp/0201350882/",target:"_blank",rel:"noopener noreferrer"}},[e._v("C++算法（第1-4部分）：基础知识，数据结构，排序，搜索"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.amazon.com/Algorithms-Part-Graph-3rd-Pt-5/dp/0201361183/",target:"_blank",rel:"noopener noreferrer"}},[e._v("C++算法第5部分：图算法"),r("OutboundLink")],1)])])])]),e._v(" "),r("h2",{attrs:{id:"面试准备书籍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#面试准备书籍"}},[e._v("#")]),e._v(" 面试准备书籍")]),e._v(" "),r("p",[e._v("你不需要买一堆这些。老实说，《破解编程面试》可能已经足够了，\n但我买了更多来给自己更多的练习。但我总是做得太多。")]),e._v(" "),r("p",[e._v("这两个都是我买的，他们给了我大量的练习。")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.amazon.com/Programming-Interviews-Exposed-Through-Interview/dp/111941847X/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Programming Interviews Exposed: Coding Your Way Through the Interview, 4th Edition"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("提供C++和Java语言的答案")]),e._v(" "),r("li",[e._v("这本书是准备《Cracking the Coding Interview》的很好热身书")]),e._v(" "),r("li",[e._v("难度适中。大多数问题可能比实际面试中遇到的问题要简单（根据我所读的内容）")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cracking the Coding Interview, 6th Edition"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("提供Java语言的答案")])])])]),e._v(" "),r("h3",{attrs:{id:"如果你有很多额外的时间"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如果你有很多额外的时间"}},[e._v("#")]),e._v(" 如果你有很多额外的时间：")]),e._v(" "),r("p",[e._v("选择一个：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.amazon.com/Elements-Programming-Interviews-Insiders-Guide/dp/1479274836",target:"_blank",rel:"noopener noreferrer"}},[e._v("Elements of Programming Interviews (C++ version)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.amazon.com/Elements-Programming-Interviews-Python-Insiders/dp/1537713949/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Elements of Programming Interviews in Python"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.amazon.com/Elements-Programming-Interviews-Java-Insiders/dp/1517435803/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Elements of Programming Interviews (Java version)"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/gardncl/elements-of-programming-interviews",target:"_blank",rel:"noopener noreferrer"}},[e._v("配套项目-本书中每个问题的方法存根和测试用例"),r("OutboundLink")],1)])])])]),e._v(" "),r("h2",{attrs:{id:"不要犯我的错误"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不要犯我的错误"}},[e._v("#")]),e._v(" 不要犯我的错误")]),e._v(" "),r("p",[e._v("这个列表在很多个月里不断增长，是的，它变得失控了。")]),e._v(" "),r("p",[e._v("以下是我犯过的一些错误，这样你就能有更好的体验。而且你将节省数月时间。")]),e._v(" "),r("h3",{attrs:{id:"_1-你不可能把所有的东西都记住"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-你不可能把所有的东西都记住"}},[e._v("#")]),e._v(" 1. 你不可能把所有的东西都记住")]),e._v(" "),r("p",[e._v("我看了数小时的视频并做了大量笔记，几个月后有很多东西我都不记得了。\n我花了三天时间浏览我的笔记并制作闪卡，以便进行复习。其实，并不需要那么多知识。")]),e._v(" "),r("p",[e._v("请阅读以下的文章以免重蹈覆辙:")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://startupnextdoor.com/retaining-computer-science-knowledge/",target:"_blank",rel:"noopener noreferrer"}},[e._v("记住计算机科学知识"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("h3",{attrs:{id:"_2-使用抽认卡"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用抽认卡"}},[e._v("#")]),e._v(" 2. 使用抽认卡")]),e._v(" "),r("p",[e._v("为了解决善忘的问题，我制作了一个抽认卡的网页，用于添加两种抽认卡：一般的及带有代码的。每种卡都会有不同的格式设计。\n而且，我还以移动设备为先去设计这些网页，以使得在任何地方，我都能通过我的手机及平板去回顾知识。")]),e._v(" "),r("p",[e._v("你也可以免费制作属于你自己的抽认卡网站：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/jwasham/computer-science-flash-cards",target:"_blank",rel:"noopener noreferrer"}},[e._v("抽认卡页面的代码仓库"),r("OutboundLink")],1)])]),e._v(" "),r("p",[r("strong",[e._v("我不建议使用我的闪卡")]),e._v("。它们太多了，而且大部分都是你不需要的琐事。")]),e._v(" "),r("p",[e._v("但是如果你不想听我的话，那就随你吧：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/jwasham/computer-science-flash-cards/blob/main/cards-jwasham.db",target:"_blank",rel:"noopener noreferrer"}},[e._v("我的抽认卡数据库 ── 旧 1200 张"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/jwasham/computer-science-flash-cards/blob/main/cards-jwasham-extreme.db",target:"_blank",rel:"noopener noreferrer"}},[e._v("我的抽认卡数据库 ── 新 1800 张"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("有一点需要记住的是，我做事有点过头，以至于卡片都覆盖到所有的东西上，从汇编语言和 Python 的细枝末节，到机器学习和统计都被覆盖到卡片上。\n而这种做法，对于要求来说是多余的。")]),e._v(" "),r("p",[r("strong",[e._v("在抽认卡上做笔记：")]),e._v(" 若你第一次发现你知道问题的答案时，先不要急着把其标注成“已知”。\n反复复习这张抽认卡，直到每次都能答对后才是真正学会了这个问题。\n反复地问答可帮助你深刻记住该知识点。")]),e._v(" "),r("p",[e._v("这里有个替代我抽认卡的网站 "),r("a",{attrs:{href:"http://ankisrs.net/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Anki"),r("OutboundLink")],1),e._v("，很多人向我推荐过它。\n这个网站用同一个字卡重复出现的方式让你牢牢地记住知识。\n这个网站非常容易使用，支持多平台，并且有云端同步功能。在 iOS 平台上收费25美金，其他平台免费。")]),e._v(" "),r("p",[e._v("这是我用 Anki 这个网站里的格式所储存的抽认卡资料库: https://ankiweb.net/shared/info/25173560 （感谢 "),r("a",{attrs:{href:"https://github.com/xiewenya",target:"_blank",rel:"noopener noreferrer"}},[e._v("@xiewenya"),r("OutboundLink")],1),e._v("）。")]),e._v(" "),r("p",[e._v('一些学生提到了关于空白间距的格式问题，可以通过以下方法进行修复：打开卡片组，编辑卡片，点击"卡片"选项，选择"样式"单选按钮，在卡片类中添加成员 "white-space: pre;"。')]),e._v(" "),r("h3",{attrs:{id:"_3-在学习过程中做编程面试题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-在学习过程中做编程面试题"}},[e._v("#")]),e._v(" 3. 在学习过程中做编程面试题")]),e._v(" "),r("p",[r("strong",[e._v("这非常重要。")])]),e._v(" "),r("p",[e._v("在学习数据结构和算法的同时，开始做编程面试题。")]),e._v(" "),r("p",[e._v("你需要将所学知识应用于解决问题，否则你会忘记。我曾经犯过这个错误。")]),e._v(" "),r("p",[e._v("一旦你学完一个主题，并且对它有了一定的掌握，比如 "),r("strong",[e._v("链表（linked lists）")]),e._v(":")]),e._v(" "),r("ol",[r("li",[e._v("打开其中一本"),r("a",{attrs:{href:"#interview-prep-books"}},[e._v("编程面试书籍")]),e._v("（或下方列出的编程问题网站之一）。")]),e._v(" "),r("li",[e._v("关于链表的问题，请提出2或3个。")]),e._v(" "),r("li",[e._v("继续学习下一个主题。")]),e._v(" "),r("li",[e._v("稍后，回来再做另外2或3个链表问题。")]),e._v(" "),r("li",[e._v("使用这种方法来学习每个新主题。")])]),e._v(" "),r("p",[r("strong",[e._v("在学习这些内容的过程中不断做问题，而不是之后。")])]),e._v(" "),r("p",[e._v("你被雇佣的不是因为你的知识，而是因为你如何应用这些知识。")]),e._v(" "),r("p",[e._v("下面列出了许多资源供你参考。继续前进吧。")]),e._v(" "),r("h3",{attrs:{id:"_4-专注"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-专注"}},[e._v("#")]),e._v(" 4. 专注")]),e._v(" "),r("p",[e._v("在学习的过程中，往往会有许多令人分心的事占据着我们宝贵的时间。\n因此，专注和集中注意力是非常困难的。放点纯音乐能帮上一些忙。")]),e._v(" "),r("h2",{attrs:{id:"没有包含的内容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#没有包含的内容"}},[e._v("#")]),e._v(" 没有包含的内容")]),e._v(" "),r("p",[e._v("有一些熟悉且普遍的技术在此未被谈及到：")]),e._v(" "),r("ul",[r("li",[e._v("Javascript")]),e._v(" "),r("li",[e._v("HTML，CSS和其他前端技术")]),e._v(" "),r("li",[e._v("SQL")])]),e._v(" "),r("h2",{attrs:{id:"日常计划"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#日常计划"}},[e._v("#")]),e._v(" 日常计划")]),e._v(" "),r("p",[e._v("这门课涵盖了很多主题。每个主题可能需要你几天的时间，甚至可能需要一周或更长时间。这取决于你的日程安排。")]),e._v(" "),r("p",[e._v("每天，按照列表中的下一个主题，观看一些关于该主题的视频，\n然后用你选择的语言为这门课程编写该数据结构或算法的实现。")]),e._v(" "),r("p",[e._v("在这里你可以查看到我的代码：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/jwasham/practice-c",target:"_blank",rel:"noopener noreferrer"}},[e._v("C"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/jwasham/practice-cpp",target:"_blank",rel:"noopener noreferrer"}},[e._v("C++"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/jwasham/practice-python",target:"_blank",rel:"noopener noreferrer"}},[e._v("Python"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("你不需要记住每个算法。你只需要能够理解它，以便能够编写自己的实现即可。")]),e._v(" "),r("h2",{attrs:{id:"编程问题练习"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#编程问题练习"}},[e._v("#")]),e._v(" 编程问题练习")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("这是为什么？我还没有准备好面试。\n")])])]),r("p",[r("a",{attrs:{href:"#3-do-coding-interview-questions-while-youre-learning"}},[e._v("那就回去阅读这部分。")])]),e._v(" "),r("p",[e._v("为什么你需要练习编程问题：")]),e._v(" "),r("ul",[r("li",[e._v("识别问题，并确定合适的数据结构和算法")]),e._v(" "),r("li",[e._v("收集问题的要求")]),e._v(" "),r("li",[e._v("像在面试中那样口头表达解决问题的过程")]),e._v(" "),r("li",[e._v("在白板或纸上编写代码，而不是在计算机上")]),e._v(" "),r("li",[e._v("为您的解决方案确定时间和空间复杂度（参见下文中的大O表示法）。")]),e._v(" "),r("li",[e._v("对你的解决方案进行测试")])]),e._v(" "),r("p",[e._v("在面试中，有一种方法论的、有交流的问题解决方法。你可以从编程面试书籍中了解这些，\n但我发现下面这个网站也非常出色：\n"),r("a",{attrs:{href:"http://www.hiredintech.com/algorithm-design/",target:"_blank",rel:"noopener noreferrer"}},[e._v("算法设计画布"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("在白板或纸上写代码，而不是在计算机上。使用一些样例输入进行测试。然后在计算机上键入并进行测试。")]),e._v(" "),r("p",[e._v('如果家里没有白板，请从艺术用品店购买一个大型的绘图本。\n你可以坐在沙发上练习。这就是我的"沙发白板"。照片中我加了一支笔来衡量尺寸。如果你使用钢笔，你会希望能擦除。\n会很快变得凌乱， '),r("strong",[e._v("我用铅笔和橡皮擦。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"https://d3j2pkmjtin6ou.cloudfront.net/art_board_sm_2.jpg",alt:"my sofa whiteboard"}})]),e._v(" "),r("p",[r("strong",[e._v("编程问题练习并不是为了记住解决编程问题的答案。")])]),e._v(" "),r("h2",{attrs:{id:"编程问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#编程问题"}},[e._v("#")]),e._v(" 编程问题")]),e._v(" "),r("p",[e._v("别忘了参考你的主要编程面试书籍"),r("a",{attrs:{href:"#interview-prep-books"}},[e._v("这里")]),e._v(".")]),e._v(" "),r("p",[e._v("解决问题：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.topcoder.com/thrive/articles/How%20To%20Find%20a%20Solution",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何找到解决方案"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.topcoder.com/thrive/articles/How%20To%20Dissect%20a%20Topcoder%20Problem%20Statement%20Content",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何分析Topcoder问题陈述"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("编程面试问题视频：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLamzFoFxwoNjPfxzaWqs7cZGsPYy0x_gI",target:"_blank",rel:"noopener noreferrer"}},[e._v("IDeserve（88个视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/user/tusharroy2525/playlists?shelf_id=2&view=50&sort=dd",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tushar Roy（5个播放列表）"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("非常适合问题解决方案的演示")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLU_sdQYzUj2keVENTP0a5rdykRSgg9Wp-",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nick White - LeetCode解答（187个视频）"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("解释解决方案和代码的很好")]),e._v(" "),r("li",[e._v("你可以在短时间内观看多个视频")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://youtube.com/FisherCoder",target:"_blank",rel:"noopener noreferrer"}},[e._v("FisherCoder - LeetCode解答"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("挑战/练习网站：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://leetcode.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("LeetCode"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("我最喜欢的编程问题网站。对于你准备的1-2个月时间，订阅会费是值得的。")]),e._v(" "),r("li",[e._v("观看上面提到的Nick White和FisherCoder的视频，可以帮助你理解代码解决方案。")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.hackerrank.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("HackerRank"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.topcoder.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("TopCoder"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://codeforces.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Codeforces"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://codility.com/programmers/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Codility"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://practice.geeksforgeeks.org/explore/?page=1",target:"_blank",rel:"noopener noreferrer"}},[e._v("Geeks for Geeks"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.algoexpert.io/product",target:"_blank",rel:"noopener noreferrer"}},[e._v("AlgoExpert"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("由谷歌工程师创建，也是提高你技能的优秀资源。")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://projecteuler.net/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Project Euler"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("主要关注数学问题，并不完全适合编程面试。")])])])]),e._v(" "),r("h2",{attrs:{id:"让我们开始吧"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#让我们开始吧"}},[e._v("#")]),e._v(" 让我们开始吧")]),e._v(" "),r("p",[e._v("好了，说得够多了，让我们学习吧!")]),e._v(" "),r("p",[e._v("但在学习的同时，不要忘记做上面的编码问题！")]),e._v(" "),r("h2",{attrs:{id:"算法复杂度-big-o-渐进分析法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法复杂度-big-o-渐进分析法"}},[e._v("#")]),e._v(" 算法复杂度 / Big-O / 渐进分析法")]),e._v(" "),r("ul",[r("li",[e._v("这里没有什么需要实施的，你只是在观看视频并记笔记！耶！")]),e._v(" "),r("li",[e._v("这里有很多视频，只要看到你理解为止就好了，你随时可以回来复习。")]),e._v(" "),r("li",[e._v("如果你不理解背后的所有数学，不要担心。")]),e._v(" "),r("li",[e._v("你只需要理解如何用大O表示法来表达算法的复杂度。")]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=iOq5kSKqeR4",target:"_blank",rel:"noopener noreferrer"}},[e._v("哈佛大学CS50 - 渐进符号（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=V6mKVRU1evU",target:"_blank",rel:"noopener noreferrer"}},[e._v("大O符号（通用快速教程）（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=ei-A_wy5Yxw&index=2&list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN",target:"_blank",rel:"noopener noreferrer"}},[e._v("大O符号（以及Ω和Θ）- 最佳数学解释（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=z1mkCe3kVUA",target:"_blank",rel:"noopener noreferrer"}},[e._v("Skiena（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_VIS4YDpuP98",target:"_blank",rel:"noopener noreferrer"}},[e._v("加州大学伯克利分校关于大O符号（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=B3SpQZaAZP4&index=10&list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN",target:"_blank",rel:"noopener noreferrer"}},[e._v("摊还分析（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] TopCoder（包括递归关系和主定理）：\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.topcoder.com/thrive/articles/Computational%20Complexity%20part%20one",target:"_blank",rel:"noopener noreferrer"}},[e._v("计算复杂性：第1部分"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.topcoder.com/thrive/articles/Computational%20Complexity%20part%20two",target:"_blank",rel:"noopener noreferrer"}},[e._v("计算复杂性：第2部分"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://bigocheatsheet.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("速查表"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/__vX2sjlpXU",target:"_blank",rel:"noopener noreferrer"}},[e._v("[复习] 5分钟内了解大O符号（视频）"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("好吧，差不多就到这里了。")]),e._v(" "),r("p",[e._v("当你阅读《破解编程面试》时，有一个章节专门讲述此事，并在最后进行了一次测验，\n以测试你是否能够确定不同算法的运行时间复杂度。这是一个非常全面的复习和测试。")]),e._v(" "),r("h2",{attrs:{id:"数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[e._v("#")]),e._v(" 数据结构")]),e._v(" "),r("ul",[r("li",[r("h3",{attrs:{id:"数组-arrays"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组-arrays"}},[e._v("#")]),e._v(" 数组（Arrays）")]),e._v(" "),r("ul",[r("li",[e._v("[ ] 介绍：\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=tI_tIZFyKBw&t=3009s",target:"_blank",rel:"noopener noreferrer"}},[e._v("数组 CS50 哈佛大学"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/arrays-OsBSF",target:"_blank",rel:"noopener noreferrer"}},[e._v("数组（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_Wp8oiO_CZZE",target:"_blank",rel:"noopener noreferrer"}},[e._v("加州大学伯克利分校CS61B - 线性和多维数组（视频）"),r("OutboundLink")],1),e._v("（从15分32秒开始）")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/dynamic-arrays-EwbnV",target:"_blank",rel:"noopener noreferrer"}},[e._v("动态数组（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=1jtrQqYpt7g",target:"_blank",rel:"noopener noreferrer"}},[e._v("嵌套数组（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] 实现一个动态数组（可自动调整大小的可变数组）：\n"),r("ul",[r("li",[e._v("[ ] 练习使用数组和指针去编码，并且指针是通过计算去跳转而不是使用索引")]),e._v(" "),r("li",[e._v("[ ] 通过分配内存来新建一个原生数据型数组\n"),r("ul",[r("li",[e._v("可以使用 int 类型的数组，但不能使用其语法特性")]),e._v(" "),r("li",[e._v("从大小为16或更大的数（使用2的倍数 —— 16、32、64、128）开始编写")])])]),e._v(" "),r("li",[e._v("[ ] size() —— 数组元素的个数")]),e._v(" "),r("li",[e._v("[ ] capacity() —— 可容纳元素的个数")]),e._v(" "),r("li",[e._v("[ ] is_empty()")]),e._v(" "),r("li",[e._v("[ ] at(index) —— 返回对应索引的元素，且若索引越界则愤然报错")]),e._v(" "),r("li",[e._v("[ ] push(item)")]),e._v(" "),r("li",[e._v("[ ] insert(index, item) —— 在指定索引中插入元素，并把后面的元素依次后移")]),e._v(" "),r("li",[e._v("[ ] prepend(item) —— 可以使用上面的 insert 函数，传参 index 为 0")]),e._v(" "),r("li",[e._v("[ ] pop() —— 删除在数组末端的元素，并返回其值")]),e._v(" "),r("li",[e._v("[ ] delete(index) —— 删除指定索引的元素，并把后面的元素依次前移")]),e._v(" "),r("li",[e._v("[ ] remove(item) —— 删除指定值的元素，并返回其索引（即使有多个元素）")]),e._v(" "),r("li",[e._v("[ ] find(item) —— 寻找指定值的元素并返回其中第一个出现的元素其索引，若未找到则返回 -1")]),e._v(" "),r("li",[e._v("[ ] resize(new_capacity) // 私有函数\n"),r("ul",[r("li",[e._v("若数组的大小到达其容积，则变大一倍")]),e._v(" "),r("li",[e._v("获取元素后，若数组大小为其容积的1/4，则缩小一半")])])])])]),e._v(" "),r("li",[e._v("[ ] 时间复杂度\n"),r("ul",[r("li",[e._v("在数组末端增加/删除、定位、更新元素，只允许占 O(1) 的时间复杂度（平摊（amortized）去分配内存以获取更多空间）")]),e._v(" "),r("li",[e._v("在数组任何地方插入/移除元素，只允许 O(n) 的时间复杂度")])])]),e._v(" "),r("li",[e._v("[ ] 空间复杂度\n"),r("ul",[r("li",[e._v("因为在内存中分配的空间邻近，所以有助于提高性能")]),e._v(" "),r("li",[e._v("空间需求 = （大于或等于 n 的数组容积）* 元素的大小。即便空间需求为 2n，其空间复杂度仍然是 O(n)")])])])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"链表-linked-lists"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表-linked-lists"}},[e._v("#")]),e._v(" 链表（Linked Lists）")]),e._v(" "),r("ul",[r("li",[e._v("[ ] 介绍：\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=2T-A_GFuoTo&t=650s",target:"_blank",rel:"noopener noreferrer"}},[e._v("链表 CS50 哈佛大学"),r("OutboundLink")],1),e._v(" - 这样建立了直观感。")]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/singly-linked-lists-kHhgK",target:"_blank",rel:"noopener noreferrer"}},[e._v("单链表（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_htzJdKoEmO0",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B - 链表1（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_-c4I3gFYe3w",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B - 链表 2（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/F8AbOfQwl1c",target:"_blank",rel:"noopener noreferrer"}},[e._v("[复习] 4分钟了解链表（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=QN6FPiD0Gzo",target:"_blank",rel:"noopener noreferrer"}},[e._v("C代码（视频）"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("不是整个视频，只是关于Node结构和内存分配的部分。")])])]),e._v(" "),r("li",[e._v("[ ] 链表 vs 数组：\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures-optimizing-performance/core-linked-lists-vs-arrays-rjBs9",target:"_blank",rel:"noopener noreferrer"}},[e._v("核心链表与数组（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures-optimizing-performance/in-the-real-world-lists-vs-arrays-QUaUd",target:"_blank",rel:"noopener noreferrer"}},[e._v("在现实世界中，链表与数组的比较（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=YQs6IC-vgmo",target:"_blank",rel:"noopener noreferrer"}},[e._v("为什么你需要避免使用链表（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 的确：你需要关于“指向指针的指针”的相关知识：（因为当你传递一个指针到一个函数时，\n该函数可能会改变指针所指向的地址）该页只是为了让你了解“指向指针的指针”这一概念。\n但我并不推荐这种链式遍历的风格。因为，这种风格的代码，其可读性和可维护性太低。\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.eskimo.com/~scs/cclass/int/sx8.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("指向指针的指针"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] 实现（我实现了使用尾指针以及没有使用尾指针这两种情况）：\n"),r("ul",[r("li",[e._v("[ ] size() —— 返回链表中数据元素的个数")]),e._v(" "),r("li",[e._v("[ ] empty() —— 若链表为空则返回一个布尔值 true")]),e._v(" "),r("li",[e._v("[ ] value_at(index) —— 返回第 n 个元素的值（从0开始计算）")]),e._v(" "),r("li",[e._v("[ ] push_front(value) —— 添加元素到链表的首部")]),e._v(" "),r("li",[e._v("[ ] pop_front() —— 删除首部元素并返回其值")]),e._v(" "),r("li",[e._v("[ ] push_back(value) —— 添加元素到链表的尾部")]),e._v(" "),r("li",[e._v("[ ] pop_back() —— 删除尾部元素并返回其值")]),e._v(" "),r("li",[e._v("[ ] front() —— 返回首部元素的值")]),e._v(" "),r("li",[e._v("[ ] back() —— 返回尾部元素的值")]),e._v(" "),r("li",[e._v("[ ] insert(index, value) —— 插入值到指定的索引，并把当前索引的元素指向到新的元素")]),e._v(" "),r("li",[e._v("[ ] erase(index) —— 删除指定索引的节点")]),e._v(" "),r("li",[e._v("[ ] value_n_from_end(n) —— 返回倒数第 n 个节点的值")]),e._v(" "),r("li",[e._v("[ ] reverse() —— 逆序链表")]),e._v(" "),r("li",[e._v("[ ] remove_value(value) —— 删除链表中指定值的第一个元素")])])]),e._v(" "),r("li",[e._v("[ ] 双向链表\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/jpGKD/doubly-linked-lists",target:"_blank",rel:"noopener noreferrer"}},[e._v("介绍（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("并不需要实现")])])])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"堆栈-stack"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#堆栈-stack"}},[e._v("#")]),e._v(" 堆栈（Stack）")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/UdKzQ/stacks",target:"_blank",rel:"noopener noreferrer"}},[e._v("堆栈（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/KcT3aVgrrpU",target:"_blank",rel:"noopener noreferrer"}},[e._v("[Review] Stacks in 3 minutes (video)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 可以不实现，因为使用数组来实现并不重要")])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"队列-queue"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#队列-queue"}},[e._v("#")]),e._v(" 队列（Queue）")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/EShpq/queue",target:"_blank",rel:"noopener noreferrer"}},[e._v("队列（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Circular_buffer",target:"_blank",rel:"noopener noreferrer"}},[e._v("原型队列/先进先出（FIFO）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/D6gu-_tmEpQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("[Review] Queues in 3 minutes (video)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 使用含有尾部指针的链表来实现:\n"),r("ul",[r("li",[e._v("enqueue(value) —— 在尾部添加值")]),e._v(" "),r("li",[e._v("dequeue() —— 删除最早添加的元素并返回其值（首部元素）")]),e._v(" "),r("li",[e._v("empty()")])])]),e._v(" "),r("li",[e._v("[ ] 使用固定大小的数组实现：\n"),r("ul",[r("li",[e._v("enqueue(value) —— 在可容的情况下添加元素到尾部")]),e._v(" "),r("li",[e._v("dequeue() —— 删除最早添加的元素并返回其值")]),e._v(" "),r("li",[e._v("empty()")]),e._v(" "),r("li",[e._v("full()")])])]),e._v(" "),r("li",[e._v("[ ] 花销：\n"),r("ul",[r("li",[e._v("在糟糕的实现情况下，使用链表所实现的队列，其入列和出列的时间复杂度将会是 O(n)。\n因为，你需要找到下一个元素，以致循环整个队列")]),e._v(" "),r("li",[e._v("enqueue：O(1)（平摊（amortized）、链表和数组 [探测（probing）]）")]),e._v(" "),r("li",[e._v("dequeue：O(1)（链表和数组）")]),e._v(" "),r("li",[e._v("empty：O(1)（链表和数组）")])])])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"哈希表-hash-table"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#哈希表-hash-table"}},[e._v("#")]),e._v(" 哈希表（Hash table）")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("[ ] 视频：")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=0M_kIqhwbFo&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=8",target:"_blank",rel:"noopener noreferrer"}},[e._v("链式哈希表（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=BRO7mVIFt08&index=9&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Table Doubling 和 Karp-Rabin（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=rvdJDijO2Ro&index=10&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Open Addressing 和密码型哈希（Cryptographic Hashing）（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=C4Kc8xzcA68",target:"_blank",rel:"noopener noreferrer"}},[e._v("PyCon 2010：强大的字典（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=66P5FMkWoVU",target:"_blank",rel:"noopener noreferrer"}},[e._v("PyCon 2017：字典更强大（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=z0lJ2k0sl1g&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=11",target:"_blank",rel:"noopener noreferrer"}},[e._v("(高级) 随机化：通用和完美哈希（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=N0COwN14gt0&list=PL2B4EEwhKD-NbwZ4ezj7gyc_3yNrojKM9&index=4",target:"_blank",rel:"noopener noreferrer"}},[e._v("(进阶)完美哈希（Perfect hashing）（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/knV86FlSXJ8",target:"_blank",rel:"noopener noreferrer"}},[e._v("[复习]4分钟了解哈希表（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("[ ] 在线课程：")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures-optimizing-performance/core-hash-tables-m7UuP",target:"_blank",rel:"noopener noreferrer"}},[e._v("核心哈希表（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/home/week/4",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据结构（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/phone-book-problem-NYZZP",target:"_blank",rel:"noopener noreferrer"}},[e._v("电话簿问题（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 分布式哈希表：\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/instant-uploads-and-storage-optimization-in-dropbox-DvaIb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dropbox中的即时上传和存储优化（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/distributed-hash-tables-tvH8H",target:"_blank",rel:"noopener noreferrer"}},[e._v("分布式哈希表（视频）"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[r("p",[e._v("[ ] 使用线性探测法的数组实现")]),e._v(" "),r("ul",[r("li",[e._v("hash(k, m) - m是哈希表的大小")]),e._v(" "),r("li",[e._v("add(key, value) - 如果键已存在，则更新值")]),e._v(" "),r("li",[e._v("exists(key) - 检查键是否存在")]),e._v(" "),r("li",[e._v("get(key) - 获取给定键的值")]),e._v(" "),r("li",[e._v("remove(key) - 删除给定键的值")])])])])])]),e._v(" "),r("h2",{attrs:{id:"更多的知识"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#更多的知识"}},[e._v("#")]),e._v(" 更多的知识")]),e._v(" "),r("ul",[r("li",[r("h3",{attrs:{id:"二分查找-binary-search"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二分查找-binary-search"}},[e._v("#")]),e._v(" 二分查找（Binary search）")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=D5SrAga1pno",target:"_blank",rel:"noopener noreferrer"}},[e._v("二分查找（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.khanacademy.org/computing/computer-science/algorithms/binary-search/a/binary-search",target:"_blank",rel:"noopener noreferrer"}},[e._v("二分查找（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.topcoder.com/community/data-science/data-science-tutorials/binary-search/",target:"_blank",rel:"noopener noreferrer"}},[e._v("详情"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://leetcode.com/discuss/general-discussion/786126/python-powerful-ultimate-binary-search-template-solved-many-problems",target:"_blank",rel:"noopener noreferrer"}},[e._v("蓝图"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/fDKIpRe8GW4",target:"_blank",rel:"noopener noreferrer"}},[e._v("【复习】四分钟二分查找(视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 实现：\n"),r("ul",[r("li",[e._v("二分查找（在一个已排序好的整型数组中查找）")]),e._v(" "),r("li",[e._v("迭代式二分查找")])])])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"按位运算-bitwise-operations"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#按位运算-bitwise-operations"}},[e._v("#")]),e._v(" 按位运算（Bitwise operations）")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://github.com/jwasham/coding-interview-university/blob/main/extras/cheat%20sheets/bits-cheat-sheet.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bits 速查表"),r("OutboundLink")],1),e._v(" ── 你需要知道大量2的幂数值（从2^1 到 2^16 及 2^32）")]),e._v(" "),r("li",[e._v("[ ] 好好理解位操作符的含义：&、|、^、~、>>、<<\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Word_(computer_architecture)",target:"_blank",rel:"noopener noreferrer"}},[e._v("字码（words）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 好的介绍：\n"),r("a",{attrs:{href:"https://www.youtube.com/watch?v=7jkIUgLC29I",target:"_blank",rel:"noopener noreferrer"}},[e._v("位操作（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=d0AwjSpNXR0",target:"_blank",rel:"noopener noreferrer"}},[e._v("C 语言编程教程 2-10：按位运算（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Bit_manipulation",target:"_blank",rel:"noopener noreferrer"}},[e._v("位操作"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Bitwise_operation",target:"_blank",rel:"noopener noreferrer"}},[e._v("按位运算"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://graphics.stanford.edu/~seander/bithacks.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bithacks"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://bits.stephan-brumme.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("位元抚弄者（The Bit Twiddler）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://bits.stephan-brumme.com/interactive.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("交互式位元抚弄者（The Bit Twiddler Interactive）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=ZusiKXcz_ac",target:"_blank",rel:"noopener noreferrer"}},[e._v("位操作技巧（Bit Hacks）（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://pconrad.github.io/old_pconrad_cs16/topics/bitOps/",target:"_blank",rel:"noopener noreferrer"}},[e._v("练习位操作"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] 一补数和补码\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=lKTsv6iVxV4",target:"_blank",rel:"noopener noreferrer"}},[e._v("二进制：利 & 弊（为什么我们要使用补码）（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Ones%27_complement",target:"_blank",rel:"noopener noreferrer"}},[e._v("一补数（1s Complement）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Two%27s_complement",target:"_blank",rel:"noopener noreferrer"}},[e._v("补码（2s Complement）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] 计算置位（Set Bits）\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://youtu.be/Hzuzo9NJrlc",target:"_blank",rel:"noopener noreferrer"}},[e._v("计算一个字节中置位（Set Bits）的四种方式（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetKernighan",target:"_blank",rel:"noopener noreferrer"}},[e._v("计算比特位"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://stackoverflow.com/questions/109023/how-to-count-the-number-of-set-bits-in-a-32-bit-integer",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何在一个 32 位的整型中计算置位（Set Bits）的数量"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] 交换值：\n"),r("ul",[r("li",[r("a",{attrs:{href:"http://bits.stephan-brumme.com/swap.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("交换（Swap）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] 绝对值：\n"),r("ul",[r("li",[r("a",{attrs:{href:"http://bits.stephan-brumme.com/absInteger.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("绝对整型（Absolute Integer）"),r("OutboundLink")],1)])])])])])]),e._v(" "),r("h2",{attrs:{id:"树-trees"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#树-trees"}},[e._v("#")]),e._v(" 树（Trees）")]),e._v(" "),r("ul",[r("li",[r("h3",{attrs:{id:"树-介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#树-介绍"}},[e._v("#")]),e._v(" 树-介绍")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/95qda/trees",target:"_blank",rel:"noopener noreferrer"}},[e._v("树的介绍（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/tree-traversal-fr51b",target:"_blank",rel:"noopener noreferrer"}},[e._v("树遍历（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=uWL6FJhq5fM",target:"_blank",rel:"noopener noreferrer"}},[e._v("BFS（广度优先搜索）和DFS（深度优先搜索）（视频）"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("BFS 笔记\n"),r("ul",[r("li",[e._v("层次遍历（BFS，使用队列）")]),e._v(" "),r("li",[e._v("时间复杂度： O(n)")]),e._v(" "),r("li",[e._v("空间复杂度：最佳情况：O(1)，最坏情况：O(n/2)=O(n)")])])]),e._v(" "),r("li",[e._v("DFS 笔记：\n"),r("ul",[r("li",[e._v("时间复杂度：O(n)")]),e._v(" "),r("li",[e._v("空间复杂度：\n"),r("ul",[r("li",[e._v("最好情况：O(log n) - 树的平均高度")]),e._v(" "),r("li",[e._v("最坏情况：O(n)")])])]),e._v(" "),r("li",[e._v("中序遍历（DFS：左、节点本身、右）")]),e._v(" "),r("li",[e._v("后序遍历（DFS：左、右、节点本身）")]),e._v(" "),r("li",[e._v("先序遍历（DFS：节点本身、左、右）")])])])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/HZ5YTanv5QE",target:"_blank",rel:"noopener noreferrer"}},[e._v("[复习]4分钟内的广度优先搜索（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/Urx87-NMm6c",target:"_blank",rel:"noopener noreferrer"}},[e._v("[复习] 4分钟内的深度优先搜索（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL9xmBV_5YoZO1JC2RgEi04nLy6D-rKk6b",target:"_blank",rel:"noopener noreferrer"}},[e._v("[复习]11分钟内的树遍历（播放列表）（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"二叉查找树-binary-search-trees-bsts"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉查找树-binary-search-trees-bsts"}},[e._v("#")]),e._v(" 二叉查找树（Binary search trees）：BSTs")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=x6At0nzX92o&index=1&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉搜索树复习（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/E7cXP/introduction",target:"_blank",rel:"noopener noreferrer"}},[e._v("介绍（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=9Jry5-82I68",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("C/C++:\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=COZK7NATh4k&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=28",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉查找树 —— 在 C/C++ 中实现（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=hWokyBoo0aI&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=29",target:"_blank",rel:"noopener noreferrer"}},[e._v("BST 的实现 —— 在堆栈和堆中的内存分配（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=Ut90klNN264&index=30&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P",target:"_blank",rel:"noopener noreferrer"}},[e._v("在二叉查找树中找到最小和最大的元素（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=_pnqMz5nrRs&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=31",target:"_blank",rel:"noopener noreferrer"}},[e._v("寻找二叉树的高度（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=9RHO6jU--GU&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=32",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉树的遍历 —— 广度优先和深度优先策略（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=86g8jAQug04&index=33&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉树：层序遍历（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=gm8DUJJhmY4&index=34&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉树的遍历：先序、中序、后序（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=yEwSGhSsT0U&index=35&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P",target:"_blank",rel:"noopener noreferrer"}},[e._v("判断一棵二叉树是否为二叉查找树（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=gcULXE7ViZw&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=36",target:"_blank",rel:"noopener noreferrer"}},[e._v("从二叉查找树中删除一个节点（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=5cPbNCrdotA&index=37&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉查找树中序遍历的后继者（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] 实现：\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://leetcode.com/problems/insert-into-a-binary-search-tree/submissions/987660183/",target:"_blank",rel:"noopener noreferrer"}},[e._v("insert    // 将值插入树中"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] get_node_count // 查找树上的节点数")]),e._v(" "),r("li",[e._v("[ ] print_values // 从小到大打印树中节点的值")]),e._v(" "),r("li",[e._v("[ ] delete_tree")]),e._v(" "),r("li",[e._v("[ ] is_in_tree // 如果值存在于树中则返回 true")]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.geeksforgeeks.org/find-the-maximum-depth-or-height-of-a-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("get_height // 以节点为单位返回高度（单个节点的高度为1）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] get_min   // 返回树上的最小值")]),e._v(" "),r("li",[e._v("[ ] get_max   // 返回树上的最大值")]),e._v(" "),r("li",[e._v("[ ] is_binary_search_tree")]),e._v(" "),r("li",[e._v("[ ] delete_value")]),e._v(" "),r("li",[e._v("[ ] get_successor // 返回给定值的后继者，若没有则返回-1")])])])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"堆-heap-优先级队列-priority-queue-二叉堆-binary-heap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#堆-heap-优先级队列-priority-queue-二叉堆-binary-heap"}},[e._v("#")]),e._v(" 堆（Heap） / 优先级队列（Priority Queue） / 二叉堆（Binary Heap）")]),e._v(" "),r("ul",[r("li",[e._v("以树形结构可视化，但通常在存储上是线性的（数组、链表）")]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)",target:"_blank",rel:"noopener noreferrer"}},[e._v("堆（Heap）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/introduction-2OpTs",target:"_blank",rel:"noopener noreferrer"}},[e._v("堆简介（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/GRV2q/binary-trees",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉树（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/supplement/S5xxz/tree-height-remark",target:"_blank",rel:"noopener noreferrer"}},[e._v("树高度备注（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/0g1dl/basic-operations",target:"_blank",rel:"noopener noreferrer"}},[e._v("基本操作（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/gl5Ni/complete-binary-trees",target:"_blank",rel:"noopener noreferrer"}},[e._v("完全二叉树（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/HxQo9/pseudocode",target:"_blank",rel:"noopener noreferrer"}},[e._v("伪代码（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/odNJmw5TOEE?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3291",target:"_blank",rel:"noopener noreferrer"}},[e._v("堆排序 - 跳转到开始部分（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/heap-sort-hSzMO",target:"_blank",rel:"noopener noreferrer"}},[e._v("堆排序（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/data-structures/building-a-heap-dwrOS",target:"_blank",rel:"noopener noreferrer"}},[e._v("构建堆（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=B7hVxCmfPtM&index=4&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT：堆和堆排序（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_yIUFT6AKBGE",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B Lecture 24：优先队列（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=MiyLo8adrWw",target:"_blank",rel:"noopener noreferrer"}},[e._v("线性时间构建堆（大顶堆）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL9xmBV_5YoZNsyqgPW-DNwUeT8F8uhWc6",target:"_blank",rel:"noopener noreferrer"}},[e._v("[复习] 13分钟了解堆（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 实现一个大顶堆：\n"),r("ul",[r("li",[e._v("[ ] insert")]),e._v(" "),r("li",[e._v("[ ] sift_up —— 用于插入元素")]),e._v(" "),r("li",[e._v("[ ] get_max —— 返回最大值但不移除元素")]),e._v(" "),r("li",[e._v("[ ] get_size() —— 返回存储的元素数量")]),e._v(" "),r("li",[e._v("[ ] is_empty() —— 若堆为空则返回 true")]),e._v(" "),r("li",[e._v("[ ] extract_max —— 返回最大值并移除")]),e._v(" "),r("li",[e._v("[ ] sift_down —— 用于获取最大值元素")]),e._v(" "),r("li",[e._v("[ ] remove(i) —— 删除指定索引的元素")]),e._v(" "),r("li",[e._v("[ ] heapify —— 构建堆，用于堆排序")]),e._v(" "),r("li",[e._v("[ ] heap_sort() —— 拿到一个未排序的数组，然后使用大顶堆或者小顶堆进行就地排序")])])])])])]),e._v(" "),r("h2",{attrs:{id:"排序-sorting"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#排序-sorting"}},[e._v("#")]),e._v(" 排序（Sorting）")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("[ ] 笔记:")]),e._v(" "),r("ul",[r("li",[e._v("实现各种排序，知道每种排序的最坏、最好和平均的复杂度分别是什么场景:\n"),r("ul",[r("li",[e._v("不要用冒泡排序 - 效率太差 - 时间复杂度 O(n^2), 除非 n <= 16")])])]),e._v(" "),r("li",[e._v('[ ] 排序算法的稳定性 ("快排是稳定的么?")\n'),r("ul",[r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Sorting_algorithm#Stability",target:"_blank",rel:"noopener noreferrer"}},[e._v("排序算法的稳定性"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://stackoverflow.com/questions/1517793/stability-in-sorting-algorithms",target:"_blank",rel:"noopener noreferrer"}},[e._v("排序算法的稳定性"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.geeksforgeeks.org/stability-in-sorting-algorithms/",target:"_blank",rel:"noopener noreferrer"}},[e._v("排序算法的稳定性"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://homepages.math.uic.edu/~leon/cs-mcs401-s08/handouts/stability.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("排序算法 - 稳定性"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] 哪种排序算法可以用链表？哪种用数组？哪种两者都可？\n"),r("ul",[r("li",[e._v("并不推荐对一个链表排序，但归并排序是可行的.")]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.geeksforgeeks.org/merge-sort-for-linked-list/",target:"_blank",rel:"noopener noreferrer"}},[e._v("链表的归并排序"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[r("p",[e._v("关于堆排序，请查看前文堆的数据结构部分。堆排序很强大，不过是非稳定排序。")])]),e._v(" "),r("li",[r("p",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/home/week/3",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick ── 归并排序（5个视频）"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/algorithms-part1/mergesort-ARWDq",target:"_blank",rel:"noopener noreferrer"}},[e._v("1. 归并排序（Mergesort）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/lecture/PWNEl/bottom-up-mergesort",target:"_blank",rel:"noopener noreferrer"}},[e._v("2. 自底向上的归并排序（Bottom up Mergesort）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/algorithms-part1/sorting-complexity-xAltF",target:"_blank",rel:"noopener noreferrer"}},[e._v("3. 排序复杂性（Sorting Complexity）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/algorithms-part1/comparators-9FYhS",target:"_blank",rel:"noopener noreferrer"}},[e._v("4. 比较器（Comparators）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/lecture/pvvLZ/stability",target:"_blank",rel:"noopener noreferrer"}},[e._v("5. 稳定性（Stability）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/home/week/3",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick ── 快速排序（4个视频）"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/algorithms-part1/quicksort-vjvnC",target:"_blank",rel:"noopener noreferrer"}},[e._v("1. 快速排序（Quicksort）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/algorithms-part1/selection-UQxFT",target:"_blank",rel:"noopener noreferrer"}},[e._v("2. 选择排序（Selection）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/algorithms-part1/duplicate-keys-XvjPd",target:"_blank",rel:"noopener noreferrer"}},[e._v("3. 重复键（Duplicate Keys）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/algorithms-part1/system-sorts-QBNZ7",target:"_blank",rel:"noopener noreferrer"}},[e._v("4. 系统排序（System Sorts）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("[ ] 加州大学伯克利分校：")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_EiUvYS2DT6I",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B Lecture 29：排序 I（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_2hTY3t80Qsk",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B Lecture 30：排序 II（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_Y6LOLpxg6Dc",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B Lecture 32：排序 III（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_qNMQ4ly43p4",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B Lecture 33：排序 V（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_pvbBMd-3NoI",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B 2014-04-21：基数排序（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=P00xJgWzz2c&index=1&list=PL89B61F78B552C1AB",target:"_blank",rel:"noopener noreferrer"}},[e._v("冒泡排序（视频）"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=ni_zk257Nqo&index=7&list=PL89B61F78B552C1AB",target:"_blank",rel:"noopener noreferrer"}},[e._v("冒泡排序分析（视频）"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=Kg4bqzAqRBM&index=3&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("插入排序 & 归并排序（视频）"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=c4BRHC7kTaQ&index=2&list=PL89B61F78B552C1AB",target:"_blank",rel:"noopener noreferrer"}},[e._v("插入排序（视频）"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=GCae1WNvnZM&index=3&list=PL89B61F78B552C1AB",target:"_blank",rel:"noopener noreferrer"}},[e._v("归并排序（视频）"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=y_G9BkAm6B8&index=4&list=PL89B61F78B552C1AB",target:"_blank",rel:"noopener noreferrer"}},[e._v("快排（视频）"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=6nDMgr0-Yyo&index=8&list=PL89B61F78B552C1AB",target:"_blank",rel:"noopener noreferrer"}},[e._v("选择排序（视频）"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[e._v("[ ] 归并排序代码：")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://www.cs.yale.edu/homes/aspnes/classes/223/examples/sorting/mergesort.c",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用外部数组（C语言）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://github.com/jwasham/practice-python/blob/master/merge_sort/merge_sort.py",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用外部数组（Python语言）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://github.com/jwasham/practice-cpp/blob/master/merge_sort/merge_sort.cc",target:"_blank",rel:"noopener noreferrer"}},[e._v("对原数组直接排序（C++）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("[ ] 快速排序代码：")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://www.cs.yale.edu/homes/aspnes/classes/223/examples/randomization/quick.c",target:"_blank",rel:"noopener noreferrer"}},[e._v("实现（C语言）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://github.com/jwasham/practice-c/blob/master/quick_sort/quick_sort.c",target:"_blank",rel:"noopener noreferrer"}},[e._v("实现（C语言）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://github.com/jwasham/practice-python/blob/master/quick_sort/quick_sort.py",target:"_blank",rel:"noopener noreferrer"}},[e._v("实现（Python语言）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL9xmBV_5YoZOZSbGAXAPIq1BeUf4j20pl",target:"_blank",rel:"noopener noreferrer"}},[e._v("[Review] Sorting (playlist) in 18 minutes"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/Hoixgm4-P4M",target:"_blank",rel:"noopener noreferrer"}},[e._v("Quick sort in 4 minutes (video)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/2DmK_H7IdTo",target:"_blank",rel:"noopener noreferrer"}},[e._v("Heap sort in 4 minutes (video)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/4VqmGXwpLqc",target:"_blank",rel:"noopener noreferrer"}},[e._v("Merge sort in 3 minutes (video)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/xli_FI7CuzA",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bubble sort in 2 minutes (video)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/g-PGLbMth_g",target:"_blank",rel:"noopener noreferrer"}},[e._v("Selection sort in 3 minutes (video)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/JU767SDMDvA",target:"_blank",rel:"noopener noreferrer"}},[e._v("Insertion sort in 2 minutes (video)"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("[ ] 实现:")]),e._v(" "),r("ul",[r("li",[e._v("[ ] 归并：平均和最差情况的时间复杂度为 O(n log n)。")]),e._v(" "),r("li",[e._v("[ ] 快排：平均时间复杂度为 O(n log n)。")]),e._v(" "),r("li",[e._v("选择排序和插入排序的最坏、平均时间复杂度都是 O(n^2)。")]),e._v(" "),r("li",[e._v("关于堆排序，请查看前文堆的数据结构部分。")])])]),e._v(" "),r("li",[r("p",[e._v("[ ] 有兴趣的话，还有一些补充，但并不是必须的:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/home/week/3",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick──基数排序 (6个视频)"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/vGHvb/strings-in-java",target:"_blank",rel:"noopener noreferrer"}},[e._v("1. Java 中的字符串"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/2pi1Z/key-indexed-counting",target:"_blank",rel:"noopener noreferrer"}},[e._v("2. 键值索引计数（Key Indexed Counting）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/c1U7L/lsd-radix-sort",target:"_blank",rel:"noopener noreferrer"}},[e._v("3. Least Significant Digit First String Radix Sort"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/gFxwG/msd-radix-sort",target:"_blank",rel:"noopener noreferrer"}},[e._v("4. Most Significant Digit First String Radix Sort"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/crkd5/3-way-radix-quicksort",target:"_blank",rel:"noopener noreferrer"}},[e._v("5. 3中基数快速排序"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/TH18W/suffix-arrays",target:"_blank",rel:"noopener noreferrer"}},[e._v("6. 后继数组（Suffix Arrays）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#radixSort",target:"_blank",rel:"noopener noreferrer"}},[e._v("基数排序"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=xhr26ia4k38",target:"_blank",rel:"noopener noreferrer"}},[e._v("基数排序（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=Nz1KZXbghj8&index=7&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("基数排序, 计数排序 (线性时间内)（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=cNB2lADK3_s&index=8&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp",target:"_blank",rel:"noopener noreferrer"}},[e._v("随机算法: 矩阵相乘, 快排, Freivalds' 算法（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=pOKy3RZbSws&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&index=14",target:"_blank",rel:"noopener noreferrer"}},[e._v("线性时间内的排序（视频）"),r("OutboundLink")],1)])])])]),e._v(" "),r("p",[e._v("总结一下，这是"),r("a",{attrs:{href:"https://www.youtube.com/watch?v=kPRA0W1kECg",target:"_blank",rel:"noopener noreferrer"}},[e._v("15种排序算法"),r("OutboundLink")],1),e._v("的可视化表示。\n如果你需要有关此主题的更多详细信息，请参阅“"),r("a",{attrs:{href:"#%E4%B8%80%E4%BA%9B%E4%B8%BB%E9%A2%98%E7%9A%84%E9%A2%9D%E5%A4%96%E5%86%85%E5%AE%B9"}},[e._v("一些主题的额外内容")]),e._v("”中的“排序”部分。")]),e._v(" "),r("h2",{attrs:{id:"图-graphs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#图-graphs"}},[e._v("#")]),e._v(" 图（Graphs）")]),e._v(" "),r("p",[e._v("图表可以用来表示计算机科学中的许多问题，所以这一部分很长，就像树和排序一样。")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("笔记:")]),e._v(" "),r("ul",[r("li",[e._v("有4种基本方式在内存里表示一个图:\n"),r("ul",[r("li",[e._v("对象和指针")]),e._v(" "),r("li",[e._v("邻接矩阵")]),e._v(" "),r("li",[e._v("邻接表")]),e._v(" "),r("li",[e._v("邻接图")])])]),e._v(" "),r("li",[e._v("熟悉以上每一种图的表示法，并了解各自的优缺点")]),e._v(" "),r("li",[e._v("广度优先搜索和深度优先搜索：知道它们的计算复杂度和设计上的权衡以及如何用代码实现它们")]),e._v(" "),r("li",[e._v("遇到一个问题时，首先尝试基于图的解决方案，如果没有再去尝试其他的。")])])]),e._v(" "),r("li",[r("p",[e._v("MIT（视频）：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=s-CYnVz-uh4&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=13",target:"_blank",rel:"noopener noreferrer"}},[e._v("广度优先搜索"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=AfSk24UTFS8&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=14",target:"_blank",rel:"noopener noreferrer"}},[e._v("深度优先搜索"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("[ ] Skiena 教授的课程 - 很不错的介绍:")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=OiXxhDrFruw&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=11",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - 课程 11 - 图的数据结构（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=g5vF8jscteo&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=12",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - 课程 12 - 广度优先搜索（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=S23W6eTcqdY&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=13",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - 课程 13 - 图的算法（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=WitPBKGV0HY&index=14&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - 课程 14 - 图的算法 (1)（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=ia1L30l7OIg&index=15&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - 课程 15 - 图的算法 (2)（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=jgDOQq6iWy8&index=16&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - 课程 16 - 图的算法 (3)（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("[ ] 图 (复习和其他):")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=Aa2sqUhIn-E&index=15&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.006 单源最短路径问题（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=NSHizBK9JD8&t=1731s&ab_channel=MITOpenCourseWare",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.006 Dijkstra算法（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=f9cVS_URPc0&ab_channel=MITOpenCourseWare",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.006 Bellman-Ford算法（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=CHvQ3q_gJ7E&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=18",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.006 加速Dijkstra算法（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=i_AQT_XfvD8&index=6&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aduni：图算法 I - 拓扑排序，最小生成树，Prim算法 - 讲座6（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=ufj5_bppBsA&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=7",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aduni：图算法 II - DFS，BFS，Kruskal算法，Union Find数据结构 - 讲座7（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=DiedsPsMKXc&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=8",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aduni：图算法 III：最短路径 - 讲座8（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=XIAQRlNkJAw&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=9",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aduni：图算法 IV：几何算法入门 - 讲座9（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://archive.org/details/ucberkeley_webcast_zFbq8vOZ_0k",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B 2014：加权图（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=tKwnms5iRBU&index=16&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp",target:"_blank",rel:"noopener noreferrer"}},[e._v("贪婪算法：最小生成树（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=RpgcYiky7uw",target:"_blank",rel:"noopener noreferrer"}},[e._v("强连通分量Kosaraju算法图算法（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL9xmBV_5YoZO-Y-H3xIC9DGSfVYJng9Yw",target:"_blank",rel:"noopener noreferrer"}},[e._v("[复习] 最短路径算法（播放列表）16分钟（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL9xmBV_5YoZObEi3Hf6lmyW-CBfs7nkOV",target:"_blank",rel:"noopener noreferrer"}},[e._v("[复习] 最小生成树（播放列表）4分钟（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("完整的 Coursera 课程:")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-on-graphs/home/welcome",target:"_blank",rel:"noopener noreferrer"}},[e._v("图的算法（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("我会实现:")]),e._v(" "),r("ul",[r("li",[e._v("[ ] DFS 邻接表 (递归)")]),e._v(" "),r("li",[e._v("[ ] DFS 邻接表 (栈迭代)")]),e._v(" "),r("li",[e._v("[ ] DFS 邻接矩阵 (递归)")]),e._v(" "),r("li",[e._v("[ ] DFS 邻接矩阵 (栈迭代)")]),e._v(" "),r("li",[e._v("[ ] BFS 邻接表")]),e._v(" "),r("li",[e._v("[ ] BFS 邻接矩阵")]),e._v(" "),r("li",[e._v("[ ] 单源最短路径问题 (Dijkstra)")]),e._v(" "),r("li",[e._v("[ ] 最小生成树")]),e._v(" "),r("li",[e._v("基于 DFS 的算法 (根据上文 Aduni 的视频):\n"),r("ul",[r("li",[e._v("[ ] 检查环 (我们会先检查是否有环存在以便做拓扑排序)")]),e._v(" "),r("li",[e._v("[ ] 拓扑排序")]),e._v(" "),r("li",[e._v("[ ] 计算图中的连通分支")]),e._v(" "),r("li",[e._v("[ ] 列出强连通分量")]),e._v(" "),r("li",[e._v("[ ] 检查双向图")])])])])])]),e._v(" "),r("h2",{attrs:{id:"更多知识"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#更多知识"}},[e._v("#")]),e._v(" 更多知识")]),e._v(" "),r("ul",[r("li",[r("h3",{attrs:{id:"递归-recursion"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#递归-recursion"}},[e._v("#")]),e._v(" 递归（Recursion）")]),e._v(" "),r("ul",[r("li",[e._v("[ ] Stanford 大学关于递归 & 回溯的课程:\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=gl3emqCuueQ&list=PLFE6E58F856038C69&index=8",target:"_blank",rel:"noopener noreferrer"}},[e._v("课程 8 | 抽象编程（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=uFJhEPrbycQ&list=PLFE6E58F856038C69&index=9",target:"_blank",rel:"noopener noreferrer"}},[e._v("课程 9 | 抽象编程（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=NdF1QDTRkck&index=10&list=PLFE6E58F856038C69",target:"_blank",rel:"noopener noreferrer"}},[e._v("课程 10 | 抽象编程（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=p-gpaIGRCQI&list=PLFE6E58F856038C69&index=11",target:"_blank",rel:"noopener noreferrer"}},[e._v("课程 11 | 抽象编程（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("什么时候适合使用")]),e._v(" "),r("li",[e._v("尾递归会更好么?\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.quora.com/What-is-tail-recursion-Why-is-it-so-bad",target:"_blank",rel:"noopener noreferrer"}},[e._v("什么是尾递归以及为什么它如此糟糕?"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/lecture/programming-languages/tail-recursion-YZic1",target:"_blank",rel:"noopener noreferrer"}},[e._v("尾递归（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/ngCos392W4w",target:"_blank",rel:"noopener noreferrer"}},[e._v("解决任何递归问题的5个简单步骤（视频）"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("回溯蓝图: "),r("a",{attrs:{href:"https://leetcode.com/problems/combination-sum/discuss/16502/A-general-approach-to-backtracking-questions-in-Java-(Subsets-Permutations-Combination-Sum-Palindrome-Partitioning)",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java"),r("OutboundLink")],1),e._v(" "),r("a",{attrs:{href:"https://leetcode.com/problems/combination-sum/discuss/429538/General-Backtracking-questions-solutions-in-Python-for-reference-%3A",target:"_blank",rel:"noopener noreferrer"}},[e._v("Python"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("h3",{attrs:{id:"动态规划-dynamic-programming"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动态规划-dynamic-programming"}},[e._v("#")]),e._v(" 动态规划（Dynamic Programming）")]),e._v(" "),r("ul",[r("li",[e._v("在你的面试中或许没有任何动态规划的问题，\n但能够知道一个题目可以使用动态规划来解决是很重要的。")]),e._v(" "),r("li",[e._v("这一部分会有点困难，每个可以用动态规划解决的问题都必须先定义出递推关系，要推导出来可能会有点棘手。")]),e._v(" "),r("li",[e._v("我建议先阅读和学习足够多的动态规划的例子，以便对解决 DP 问题的一般模式有个扎实的理解。")]),e._v(" "),r("li",[e._v("[ ] 视频:\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=wAA0AMfcJHQ&list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx&index=18",target:"_blank",rel:"noopener noreferrer"}},[e._v("Skiena：CSE373 2020 - 讲座19 - 动态规划简介（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=T3A4jlHlhtA&list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx&index=19",target:"_blank",rel:"noopener noreferrer"}},[e._v("Skiena：CSE373 2020 - 讲座20 - 编辑距离（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=iPnPVcZmRbE&list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx&index=20",target:"_blank",rel:"noopener noreferrer"}},[e._v("Skiena：CSE373 2020 - 讲座20 - 编辑距离（续）（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=2xPE4Wq8coQ&list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx&index=21",target:"_blank",rel:"noopener noreferrer"}},[e._v("Skiena：CSE373 2020 - 讲座21 - 动态规划（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=Yh3RzqQGsyI&list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx&index=22",target:"_blank",rel:"noopener noreferrer"}},[e._v("Skiena：CSE373 2020 - 讲座22 - 动态规划和复习（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/J5aJEcOr6Eo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3558",target:"_blank",rel:"noopener noreferrer"}},[e._v("Simonson：动态规划 0（从59:18开始）（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=0EzHjQ_SOeU&index=11&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Simonson：动态规划 I - 第11讲（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=v1qiRwuJU7g&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=12",target:"_blank",rel:"noopener noreferrer"}},[e._v("Simonson：动态规划 II - 第12讲（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 单独的动态规划问题列表（每个都很短）:\n"),r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr",target:"_blank",rel:"noopener noreferrer"}},[e._v("动态规划（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] 耶鲁课程笔记:\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#dynamicProgramming",target:"_blank",rel:"noopener noreferrer"}},[e._v("动态规划"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] Coursera 课程:\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/80RrW/the-rna-secondary-structure-problem",target:"_blank",rel:"noopener noreferrer"}},[e._v("RNA 二级结构问题（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/PSonq/a-dynamic-programming-algorithm",target:"_blank",rel:"noopener noreferrer"}},[e._v("动态规划算法（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/oUEK2/illustrating-the-dp-algorithm",target:"_blank",rel:"noopener noreferrer"}},[e._v("DP 算法描述（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/nfK2r/running-time-of-the-dp-algorithm",target:"_blank",rel:"noopener noreferrer"}},[e._v("DP 算法的运行时间（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/M999a/dp-vs-recursive-implementation",target:"_blank",rel:"noopener noreferrer"}},[e._v("DP vs 递归实现（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/UZ7o6/global-pairwise-sequence-alignment",target:"_blank",rel:"noopener noreferrer"}},[e._v("全局成对序列排列（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithmic-thinking-2/lecture/WnNau/local-pairwise-sequence-alignment",target:"_blank",rel:"noopener noreferrer"}},[e._v("本地成对序列排列（视频）"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"设计模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[e._v("#")]),e._v(" 设计模式")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=3cmzqZzwNDM&list=PLGLfVvz_LVvQ5G-LdJ8RLqe-ndo7QITYc&index=3",target:"_blank",rel:"noopener noreferrer"}},[e._v("UML 统一建模语言概览 (视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 主要有如下的设计模式:\n"),r("ul",[r("li",[e._v("[ ] 策略模式（strategy）")]),e._v(" "),r("li",[e._v("[ ] 单例模式（singleton）")]),e._v(" "),r("li",[e._v("[ ] 适配器模式（adapter）")]),e._v(" "),r("li",[e._v("[ ] 原型模式（prototype）")]),e._v(" "),r("li",[e._v("[ ] 装饰器模式（decorator）")]),e._v(" "),r("li",[e._v("[ ] 访问者模式（visitor）")]),e._v(" "),r("li",[e._v("[ ] 工厂模式，抽象工厂模式（factory, abstract factory）")]),e._v(" "),r("li",[e._v("[ ] 外观模式（facade）")]),e._v(" "),r("li",[e._v("[ ] 观察者模式（observer）")]),e._v(" "),r("li",[e._v("[ ] 代理模式（proxy）")]),e._v(" "),r("li",[e._v("[ ] 委托模式（delegate）")]),e._v(" "),r("li",[e._v("[ ] 命令模式（command）")]),e._v(" "),r("li",[e._v("[ ] 状态模式（state）")]),e._v(" "),r("li",[e._v("[ ] 备忘录模式（memento）")]),e._v(" "),r("li",[e._v("[ ] 迭代器模式（iterator）")]),e._v(" "),r("li",[e._v("[ ] 组合模式（composite）")]),e._v(" "),r("li",[e._v("[ ] 享元模式（flyweight）")])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLF206E906175C7E07",target:"_blank",rel:"noopener noreferrer"}},[e._v("系列视频（27个）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.amazon.com/Head-First-Design-Patterns-Freeman/dp/0596007124",target:"_blank",rel:"noopener noreferrer"}},[e._v("书籍：《Head First设计模式》"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v('I know the canonical book is "Design Patterns: Elements of Reusable Object-Oriented Software", but Head First is great for beginners to OO.')])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://sourcemaking.com/design-patterns-and-tips",target:"_blank",rel:"noopener noreferrer"}},[e._v("Handy reference: 101 Design Patterns & Tips for Developers"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"组合-combinatorics-n-中选-k-个-概率-probability"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#组合-combinatorics-n-中选-k-个-概率-probability"}},[e._v("#")]),e._v(" 组合（Combinatorics） (n 中选 k 个) & 概率（Probability）")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=8RRo6Ti9d0U",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据技巧: 如何找出阶乘、排列和组合(选择)（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=sZkAAk9Wwa4",target:"_blank",rel:"noopener noreferrer"}},[e._v("来点学校的东西: 概率（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=dNaJg-mLobQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("来点学校的东西: 概率和马尔可夫链（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 可汗学院:\n"),r("ul",[r("li",[e._v("课程设置:\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.khanacademy.org/math/probability/probability-and-combinatorics-topic",target:"_blank",rel:"noopener noreferrer"}},[e._v("概率理论基础"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("只有视频 - 41 (每一个都短小精悍):\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=uzkc-qNVoOk&list=PLC58778F28211FA19",target:"_blank",rel:"noopener noreferrer"}},[e._v("概率解释（视频）"),r("OutboundLink")],1)])])])])])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"np-np-completeness和近似算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#np-np-completeness和近似算法"}},[e._v("#")]),e._v(" NP, NP-Completeness和近似算法")]),e._v(" "),r("ul",[r("li",[e._v("知道最经典的一些 NP-Completeness 问题，比如旅行商问题和背包问题，\n而且能在面试官试图忽悠你的时候识别出他们。")]),e._v(" "),r("li",[e._v("知道 NP-Completeness 是什么意思.")]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=moPtwq_cVH8&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=23",target:"_blank",rel:"noopener noreferrer"}},[e._v("计算复杂度（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] Simonson:\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/qcGnJ47Smlo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=2939",target:"_blank",rel:"noopener noreferrer"}},[e._v("贪心算法. II & 介绍 NP-Completeness（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=e0tGC6ZQdQE&index=16&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm",target:"_blank",rel:"noopener noreferrer"}},[e._v("NP-Completeness II & 归约（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=fCX1BGT3wjE&index=17&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm",target:"_blank",rel:"noopener noreferrer"}},[e._v("NP-Completeness III（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=NKLDp3Rch3M&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=18",target:"_blank",rel:"noopener noreferrer"}},[e._v("NP-Completeness IV（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] Skiena:\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/KiK5TVgXbFg?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=1508",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - 课程 23 - 介绍 NP-Completeness IV（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=27Al52X3hd4&index=24&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - 课程 24 - NP-Completeness证明（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=xCPH4gwIIXM&index=25&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2012 - 课程 25 - NP-Completeness挑战（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=_EzetTkG_Cc&list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx&index=26",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2020年 - 第26讲 - NP-Completeness挑战（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=eHZifpgyH_4&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=22",target:"_blank",rel:"noopener noreferrer"}},[e._v("复杂度: P, NP, NP-完全性, 规约（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=MEz1J9wY2iM&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=24",target:"_blank",rel:"noopener noreferrer"}},[e._v("复杂度: 近视算法 Algorithms（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=4q-jmGrmxKs&index=25&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp",target:"_blank",rel:"noopener noreferrer"}},[e._v("复杂度: 固定参数算法（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("Peter Norvik 讨论旅行商问题的近似最优解:\n"),r("ul",[r("li",[r("a",{attrs:{href:"http://nbviewer.jupyter.org/url/norvig.com/ipython/TSP.ipynb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jupyter 笔记本"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("《算法导论》（CLRS）的第 1048 - 1140 页。")])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"计算机如何处理程序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#计算机如何处理程序"}},[e._v("#")]),e._v(" 计算机如何处理程序")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=XM4lGflQFvA",target:"_blank",rel:"noopener noreferrer"}},[e._v("CPU如何执行程序（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/1I5ZMmrOfnA",target:"_blank",rel:"noopener noreferrer"}},[e._v("计算机如何进行计算 - 算术逻辑单元（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/fpnE6UAfbtU",target:"_blank",rel:"noopener noreferrer"}},[e._v("寄存器和RAM（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/FZGugFqdr60",target:"_blank",rel:"noopener noreferrer"}},[e._v("中央处理器（CPU）（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://youtu.be/zltgXvg6r3k",target:"_blank",rel:"noopener noreferrer"}},[e._v("指示和程序（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"缓存-cache"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#缓存-cache"}},[e._v("#")]),e._v(" 缓存（Cache）")]),e._v(" "),r("ul",[r("li",[e._v("[ ] LRU 缓存:\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=R5ON3iwx78M",target:"_blank",rel:"noopener noreferrer"}},[e._v("LRU 的魔力 (100 Days of Google Dev)（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=bq6N7Ym81iI",target:"_blank",rel:"noopener noreferrer"}},[e._v("实现 LRU（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=8-FZRAjR7qU",target:"_blank",rel:"noopener noreferrer"}},[e._v("LeetCode - 146 LRU Cache (C++)（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] CPU 缓存:\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=vjYF_fAZI5E&list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-&index=24",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.004 L15: 存储体系（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=ajgC3-pyGlk&index=25&list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.004 L16: 缓存的问题（视频）"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"进程-processe-和线程-thread"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进程-processe-和线程-thread"}},[e._v("#")]),e._v(" 进程（Processe）和线程（Thread）")]),e._v(" "),r("ul",[r("li",[e._v("[ ] 计算机科学 162 - 操作系统 (25 个视频):\n"),r("ul",[r("li",[e._v("视频 1-11 是关于进程和线程")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iBDyz-ba4yDskqMDY6A1w_c",target:"_blank",rel:"noopener noreferrer"}},[e._v("操作系统和系统编程（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.quora.com/What-is-the-difference-between-a-process-and-a-thread",target:"_blank",rel:"noopener noreferrer"}},[e._v("进程和线程的区别是什么?"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("涵盖了:\n"),r("ul",[r("li",[e._v("进程、线程、协程\n"),r("ul",[r("li",[e._v("进程和线程的区别")]),e._v(" "),r("li",[e._v("进程")]),e._v(" "),r("li",[e._v("线程")]),e._v(" "),r("li",[e._v("锁")]),e._v(" "),r("li",[e._v("互斥")]),e._v(" "),r("li",[e._v("信号量")]),e._v(" "),r("li",[e._v("监控")]),e._v(" "),r("li",[e._v("他们是如何工作的")]),e._v(" "),r("li",[e._v("死锁")]),e._v(" "),r("li",[e._v("活锁")])])]),e._v(" "),r("li",[e._v("CPU 活动, 中断, 上下文切换")]),e._v(" "),r("li",[e._v("现代多核处理器的并发式结构")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=LKe7xK0bF7o&list=PLCiOXwirraUCBE9i_ukL8_Kfg6XNv7Se8&index=2",target:"_blank",rel:"noopener noreferrer"}},[e._v("分页（paging），分段（segmentation）和虚拟内存（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=uFKi2-J-6II&list=PLCiOXwirraUCBE9i_ukL8_Kfg6XNv7Se8&index=3",target:"_blank",rel:"noopener noreferrer"}},[e._v("中断（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("进程资源需要（内存：代码、静态存储器、栈、堆、文件描述符、I/O）")]),e._v(" "),r("li",[e._v("线程资源需要（在同一个进程内和其他线程共享以上（除了栈）的资源，但是每个线程都有独立的程序计数器、栈计数器、寄存器和栈）")]),e._v(" "),r("li",[e._v("Fork 操作是真正的写时复制（只读），直到新的进程写到内存中，才会生成一份新的拷贝。")]),e._v(" "),r("li",[e._v("上下文切换\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.javatpoint.com/what-is-the-context-switching-in-the-operating-system",target:"_blank",rel:"noopener noreferrer"}},[e._v("操作系统和底层硬件如何启动上下文切换？"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL5jc9xFGsL8E12so1wlMS0r0hTQoJL74M",target:"_blank",rel:"noopener noreferrer"}},[e._v("C++ 的线程 (系列 - 10 个视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLacuG5pysFbDQU8kKxbUh4K5c1iL5_k7k",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 377 春季'14：马萨诸塞大学的操作系统"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] Python 的并发 (视频):\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL1H1sBF1VAKVMONJWJkmUh6_p8g4F2oy1",target:"_blank",rel:"noopener noreferrer"}},[e._v("线程系列"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=Bs7vPNbB9JM",target:"_blank",rel:"noopener noreferrer"}},[e._v("Python 线程"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=Obt-vMVdM8s",target:"_blank",rel:"noopener noreferrer"}},[e._v("理解 Python 的 GIL (2010)"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://www.dabeaz.com/GIL",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=MCs5OvhV9S4",target:"_blank",rel:"noopener noreferrer"}},[e._v("David Beazley - Python 协程 - PyCon 2015"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=ZzfHjytDceU",target:"_blank",rel:"noopener noreferrer"}},[e._v("Keynote David Beazley - 兴趣主题 (Python 异步 I/O)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=0zaPs8OtyKY",target:"_blank",rel:"noopener noreferrer"}},[e._v("Python 中的互斥"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[e._v("#")]),e._v(" 测试")]),e._v(" "),r("ul",[r("li",[e._v("涵盖了:\n"),r("ul",[r("li",[e._v("单元测试是如何工作的")]),e._v(" "),r("li",[e._v("什么是模拟对象")]),e._v(" "),r("li",[e._v("什么是集成测试")]),e._v(" "),r("li",[e._v("什么是依赖注入")])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=SAhJf36_u5U",target:"_blank",rel:"noopener noreferrer"}},[e._v("James Bach 讲敏捷软件测试（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=ILkT_HV9DVU",target:"_blank",rel:"noopener noreferrer"}},[e._v("James Bach 软件测试公开课（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://vimeo.com/83960706",target:"_blank",rel:"noopener noreferrer"}},[e._v("Steve Freeman - 测试驱动的开发（视频）"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://gotocon.com/dl/goto-berlin-2013/slides/SteveFreeman_TestDrivenDevelopmentThatsNotWhatWeMeant.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("slides"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] 依赖注入:\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=IKD2-MAkXyQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("视频"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://jasonpolites.github.io/tao-of-testing/ch3-1.1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("测试之道"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://jasonpolites.github.io/tao-of-testing/ch4-1.1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何编写测试"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"字符串搜索和操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#字符串搜索和操作"}},[e._v("#")]),e._v(" 字符串搜索和操作")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/TH18W/suffix-arrays",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick──后缀数组（Suffix Arrays）（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/home/week/4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick──子字符串搜寻（视频）"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/n3ZpG/introduction-to-substring-search",target:"_blank",rel:"noopener noreferrer"}},[e._v("1. 子字符串搜寻导论"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/2Kn5i/brute-force-substring-search",target:"_blank",rel:"noopener noreferrer"}},[e._v("2. 子字符串搜寻──暴力法"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/TAtDr/knuth-morris-pratt",target:"_blank",rel:"noopener noreferrer"}},[e._v("3. KMP算法"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/CYxOT/boyer-moore",target:"_blank",rel:"noopener noreferrer"}},[e._v("4. Boyer-Moore算法"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/3KiqT/rabin-karp",target:"_blank",rel:"noopener noreferrer"}},[e._v("5. Rabin-Karp算法"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/tAfHI/search-pattern-in-text",target:"_blank",rel:"noopener noreferrer"}},[e._v("文本的搜索模式（视频）"),r("OutboundLink")],1)])])])]),e._v(" "),r("p",[e._v("如果你需要有关此主题的更多详细信息，请参阅“"),r("a",{attrs:{href:"#%E4%B8%80%E4%BA%9B%E4%B8%BB%E9%A2%98%E7%9A%84%E9%A2%9D%E5%A4%96%E5%86%85%E5%AE%B9"}},[e._v("一些主题的额外内容")]),e._v("”中的“字符串匹配”部分。")]),e._v(" "),r("ul",[r("li",[r("h3",{attrs:{id:"字典树-tries"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#字典树-tries"}},[e._v("#")]),e._v(" 字典树（Tries）")]),e._v(" "),r("ul",[r("li",[e._v("需要注意的是，字典树各式各样。有些有前缀，而有些则没有。有些使用字符串而不使用比特位来追踪路径。")]),e._v(" "),r("li",[e._v("阅读代码，但不实现。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/home/week/4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick──字典树（3个视频）"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/CPVdr/r-way-tries",target:"_blank",rel:"noopener noreferrer"}},[e._v("1. R Way字典树"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/yQM8K/ternary-search-tries",target:"_blank",rel:"noopener noreferrer"}},[e._v("2. 三元搜索树"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2/lecture/jwNmV/character-based-operations",target:"_blank",rel:"noopener noreferrer"}},[e._v("3. 基于字符串的操作"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Tries",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据结构笔记及编程技术"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 短课程视频：\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/08Xyf/core-introduction-to-tries",target:"_blank",rel:"noopener noreferrer"}},[e._v("对字典树的介绍（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/PvlZW/core-performance-of-tries",target:"_blank",rel:"noopener noreferrer"}},[e._v("字典树的性能（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/DFvd3/core-implementing-a-trie",target:"_blank",rel:"noopener noreferrer"}},[e._v("实现一棵字典树（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.toptal.com/java/the-trie-a-neglected-data-structure",target:"_blank",rel:"noopener noreferrer"}},[e._v("字典树：一个被忽略的数据结构"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.topcoder.com/community/data-science/data-science-tutorials/using-tries/",target:"_blank",rel:"noopener noreferrer"}},[e._v("TopCoder —— 使用字典树"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=TJ8SkcUSdbU",target:"_blank",rel:"noopener noreferrer"}},[e._v("标准教程（现实中的用例）（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=NinWEPPrkDQ&index=16&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT，高阶数据结构，字符串（视频中间有点困难）（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"浮点数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浮点数"}},[e._v("#")]),e._v(" 浮点数")]),e._v(" "),r("ul",[r("li",[e._v("[ ] 简单的8位: "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=ji3SfClm8TU",target:"_blank",rel:"noopener noreferrer"}},[e._v("浮点数的表示 - 1（视频 - 计算中有错误 - 请查看视频描述）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"unicode"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#unicode"}},[e._v("#")]),e._v(" Unicode")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://www.joelonsoftware.com/articles/Unicode.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("每一个软件开发者的绝对最低限度，必须要知道的关于 Unicode 和字符集知识"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://kunststube.net/encoding/",target:"_blank",rel:"noopener noreferrer"}},[e._v("关于处理文本需要的编码和字符集，每个程序员绝对需要知道的知识"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"字节序-endianness"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#字节序-endianness"}},[e._v("#")]),e._v(" 字节序（Endianness）")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://web.archive.org/web/20180107141940/http://www.cs.umd.edu:80/class/sum2003/cmsc311/Notes/Data/endian.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("大/小端序"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=JrNF0KRAlyo",target:"_blank",rel:"noopener noreferrer"}},[e._v("大端序 Vs 小端序（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=oBSuXP-1Tc0",target:"_blank",rel:"noopener noreferrer"}},[e._v("由里入内的大端序与小端序（视频）"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("对于内核开发非常具有技术性，如果大多数的内容听不懂也没关系。")]),e._v(" "),r("li",[e._v("前半部就已经足够了。")])])])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"网络-视频"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络-视频"}},[e._v("#")]),e._v(" 网络（视频）")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("如果你具有网络经验或想成为可靠性工程师或运维工程师，期待你的问题")])]),e._v(" "),r("li",[e._v("知道这些有益无害，多多益善!")]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.khanacademy.org/computing/computer-science/computers-and-internet-code-org",target:"_blank",rel:"noopener noreferrer"}},[e._v("可汗学院"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=Vdc8TCESIg8",target:"_blank",rel:"noopener noreferrer"}},[e._v("UDP 和 TCP：网络传输协议中的数据压缩（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=e5DEVa9eSN0",target:"_blank",rel:"noopener noreferrer"}},[e._v("TCP/IP 和 OSI 模型解释！（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=nomyRJehhnM",target:"_blank",rel:"noopener noreferrer"}},[e._v("互联网上的数据包传输。网络和 TCP/IP 教程。（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=WGJrLqtX7As",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=S2iBR2ZlZf0",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSL 和 HTTPS（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=Rp3iZUvXWlM",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSL/TLS（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=E9FxNzv1Tr8",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP 2.0（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLEbnTDJUr_IegfoqO4iPnPYQui46QqT0j",target:"_blank",rel:"noopener noreferrer"}},[e._v("视频系列（21个视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=t5xYI0jzOf4",target:"_blank",rel:"noopener noreferrer"}},[e._v("子网络解密 - 第五部分 经典内部域名指向 CIDR 标记（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 套接字（Sockets）：\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=6G_W54zuadg&t=6s",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java──套接字──介绍（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=G75vN2mnJeQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("套接字编程（视频）"),r("OutboundLink")],1)])])])])])]),e._v(" "),r("hr"),e._v(" "),r("h2",{attrs:{id:"最终复习"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#最终复习"}},[e._v("#")]),e._v(" 最终复习")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("本节将包含一系列短视频，您可以迅速观看，以便复习大部分重要概念。\n如果您经常需要温习知识，这会很有帮助。\n")])])]),r("ul",[r("li",[e._v("[ ] 一系列2-3分钟的短主题视频（共23个视频）\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=r4r1DZcx1cM&list=PLmVb1OknmNJuC5POdcDv5oCS7_OUkDgpj&index=22",target:"_blank",rel:"noopener noreferrer"}},[e._v("视频链接"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] 一系列2-5分钟的短主题视频 - Michael Sambol（共46个视频）：\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/@MichaelSambol",target:"_blank",rel:"noopener noreferrer"}},[e._v("视频链接"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/msambol/dsa",target:"_blank",rel:"noopener noreferrer"}},[e._v("代码示例"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick的算法课程视频 - 算法I"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part2",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick的算法课程视频 - 算法II"),r("OutboundLink")],1)])]),e._v(" "),r("hr"),e._v(" "),r("h2",{attrs:{id:"更新你的简历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#更新你的简历"}},[e._v("#")]),e._v(" 更新你的简历")]),e._v(" "),r("ul",[r("li",[e._v("在书籍《Cracking The Coding Interview》和《Programming Interviews Exposed》中查看简历准备信息。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.careercup.com/resume",target:"_blank",rel:"noopener noreferrer"}},[e._v("“这就是一个优秀简历的样子” by Gayle McDowell（《Cracking the Coding Interview》的作者）"),r("OutboundLink")],1),e._v(",\n"),r("ul",[r("li",[e._v("作者备注：“这是针对美国的简历。印度和其他国家的简历有不同的期望，尽管许多要点是相同的。”")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.techinterviewhandbook.org/resume/guide",target:"_blank",rel:"noopener noreferrer"}},[e._v("“逐步简历指南” by Tech Interview Handbook"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("详细指南，教您如何从零开始设置您的简历，编写有效的简历内容，优化它，并测试您的简历。")])])])]),e._v(" "),r("h2",{attrs:{id:"面试流程与一般面试准备"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#面试流程与一般面试准备"}},[e._v("#")]),e._v(" 面试流程与一般面试准备")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://davidbyttow.medium.com/how-to-pass-the-engineering-interview-in-2021-45f1b389a1",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何在2021年通过工程师面试"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=N233T0epWTs",target:"_blank",rel:"noopener noreferrer"}},[e._v("揭秘技术招聘过程"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 如何在四大科技巨头公司中找到工作：\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=YJZCUhxNCv8",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何在四大科技巨头公司中找到工作 - 亚马逊、Facebook、谷歌和微软（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=6790FVXWBw8&feature=youtu.be",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何在四大科技巨头公司中找到工作1（后续视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] 《破解编程面试》第一集：\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=rEJzOhC5ZtQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gayle L McDowell - Cracking The Coding Interview（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=aClxtDcdpsQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("与作者Gayle Laakmann McDowell一起破解编程面试（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] 破解Facebook编程面试：\n"),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=wCl9kvQGHPI",target:"_blank",rel:"noopener noreferrer"}},[e._v("方法论"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=4UWDyJq8jZg",target:"_blank",rel:"noopener noreferrer"}},[e._v("问题演示"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("面试准备课程：\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.udemy.com/python-for-data-structures-algorithms-and-interviews/",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据结构、算法和面试的Python课程（付费课程）："),r("OutboundLink")],1),e._v(":\n"),r("ul",[r("li",[e._v("以Python为中心的面试准备课程，涵盖数据结构、算法、模拟面试等内容。")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.udacity.com/course/data-structures-and-algorithms-in-python--ud513",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用Python的数据结构和算法简介（Udacity免费课程）："),r("OutboundLink")],1),e._v(":\n"),r("ul",[r("li",[e._v("一个免费的以Python为中心的数据结构和算法课程。")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.udacity.com/course/data-structures-and-algorithms-nanodegree--nd256",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据结构和算法纳米学位！（Udacity付费纳米学位）："),r("OutboundLink")],1),e._v(":\n"),r("ul",[r("li",[e._v("提供超过100个数据结构和算法练习的实际操作体验，并得到专属导师的指导，以帮助您为面试和实际工作做准备。")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.educative.io/courses/grokking-the-behavioral-interview",target:"_blank",rel:"noopener noreferrer"}},[e._v("Grokking行为面试（Educative免费课程）："),r("OutboundLink")],1),e._v(":\n"),r("ul",[r("li",[e._v("很多时候，阻碍您获得梦想工作的不是您的技术能力，而是您在行为面试中的表现。")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://algo.monster/?utm_campaign=jwasham&utm_medium=referral&utm_content=coding-interview-university&utm_source=github",target:"_blank",rel:"noopener noreferrer"}},[e._v("AlgoMonster（付费课程，提供免费内容）：)"),r("OutboundLink")],1),e._v(":\n"),r("ul",[r("li",[e._v("LeetCode的速成课程。涵盖了从成千上万的问题中提炼出的所有模式。")])])])])])]),e._v(" "),r("p",[e._v("模拟面试：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://www.gainlo.co/#!/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gainlo.co：来自大公司的模拟面试官"),r("OutboundLink")],1),e._v(" - 我用过这个，帮助我放松进行电话和现场面试。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.pramp.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pramp：与同行进行模拟面试"),r("OutboundLink")],1),e._v(" - 同行模式的实践面试。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://interviewing.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("interviewing.io：与资深工程师进行模拟面试 "),r("OutboundLink")],1),e._v(" - 匿名算法/系统设计面试，与FAANG公司的资深工程师进行。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://meetapro.com/?utm_source=ciu",target:"_blank",rel:"noopener noreferrer"}},[e._v("Meetapro：与顶级FAANG面试官进行模拟面试 "),r("OutboundLink")],1),e._v(" - 类似Airbnb的模拟面试/指导平台。")])]),e._v(" "),r("h2",{attrs:{id:"当面试来临的时候"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#当面试来临的时候"}},[e._v("#")]),e._v(" 当面试来临的时候")]),e._v(" "),r("p",[e._v("随着下面列举的问题思考下你可能会遇到的 20 个面试问题，每个问题准备 2-3 种回答。\n准备点故事，不要只是摆一些你完成的事情的数据，相信我，人人都喜欢听故事。")]),e._v(" "),r("ul",[r("li",[e._v("你为什么想得到这份工作？")]),e._v(" "),r("li",[e._v("你解决过的最有难度的问题是什么？")]),e._v(" "),r("li",[e._v("面对过的最大挑战是什么?")]),e._v(" "),r("li",[e._v("见过的最好或者最坏的设计是怎么样的?")]),e._v(" "),r("li",[e._v("对某个产品提出改进建议。")]),e._v(" "),r("li",[e._v("你作为一个个体同时也是团队的一员，如何达到最好的工作状态?")]),e._v(" "),r("li",[e._v("你的什么技能或者经验是你的角色中不可或缺的，为什么？")]),e._v(" "),r("li",[e._v("你在某份工作或某个项目中最享受的是什么?")]),e._v(" "),r("li",[e._v("你在某份工作或某个项目中面临过的最大挑战是什么?")]),e._v(" "),r("li",[e._v("你在某份工作或某个项目中遇到过的最硬的 Bug 是什么样的？")]),e._v(" "),r("li",[e._v("你在某份工作或某个项目中学到了什么？")]),e._v(" "),r("li",[e._v("你在某份工作或某个项目中哪些地方还可以做的更好？")])]),e._v(" "),r("h2",{attrs:{id:"问面试官的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#问面试官的问题"}},[e._v("#")]),e._v(" 问面试官的问题")]),e._v(" "),r("p",[e._v("我会问的一些：(可能我已经知道了答案但我想听听面试官的看法或者了解团队的前景):")]),e._v(" "),r("ul",[r("li",[e._v("团队多大规模?")]),e._v(" "),r("li",[e._v("开发周期是怎样的? 会使用瀑布流/极限编程/敏捷开发么?")]),e._v(" "),r("li",[e._v("经常会为截止日期（deadlines）加班么? 或者是有弹性的?")]),e._v(" "),r("li",[e._v("团队里怎么做技术选型?")]),e._v(" "),r("li",[e._v("每周平均开多少次会?")]),e._v(" "),r("li",[e._v("你觉得工作环境有助于员工集中精力吗?")]),e._v(" "),r("li",[e._v("目前正在做什么工作?")]),e._v(" "),r("li",[e._v("喜欢这些事情吗?")]),e._v(" "),r("li",[e._v("工作期限是怎么样的?")]),e._v(" "),r("li",[e._v("工作生活怎么平衡?")])]),e._v(" "),r("h2",{attrs:{id:"当你获得了梦想的职位"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#当你获得了梦想的职位"}},[e._v("#")]),e._v(" 当你获得了梦想的职位")]),e._v(" "),r("p",[e._v("恭喜你！")]),e._v(" "),r("p",[e._v("继续学习。")]),e._v(" "),r("p",[e._v("活到老，学到老。")]),e._v(" "),r("hr"),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("*****************************************************************************************************\n*****************************************************************************************************\n\n下面的内容都是可选的。\n通过学习这些内容，你将会得到更多的有关 CS 的概念，并将为所有的软件工程工作做更好的准备。\n你将会成为一个更全面的软件工程师。\n\n*****************************************************************************************************\n*****************************************************************************************************\n")])])]),r("hr"),e._v(" "),r("h2",{attrs:{id:"额外书籍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#额外书籍"}},[e._v("#")]),e._v(" 额外书籍")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("你可以从以下的书单挑选你有兴趣的主题来研读。\n")])])]),r("ul",[r("li",[r("a",{attrs:{href:"https://www.amazon.com/dp/013937681X",target:"_blank",rel:"noopener noreferrer"}},[e._v("UNIX环境高级编程"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("老，但却很棒")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.amazon.com/dp/1593273894/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Linux 命令行大全"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("现代选择")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/TCP/IP_Illustrated",target:"_blank",rel:"noopener noreferrer"}},[e._v("TCP-IP详解系列"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.amazon.com/gp/product/0596007124/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Head First 设计模式"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("设计模式入门介绍")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612",target:"_blank",rel:"noopener noreferrer"}},[e._v("设计模式：可复用面向对象软件的基础"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("也被称为“四人帮”（Gang of Four(GOF)）")]),e._v(" "),r("li",[e._v("经典设计模式书籍")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.amazon.com/Algorithm-Design-Manual-Steven-Skiena/dp/1849967202",target:"_blank",rel:"noopener noreferrer"}},[e._v("算法设计手冊（Skiena）"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("作为复习以及问题辨别")]),e._v(" "),r("li",[e._v("这本书中算法的部分难度已经超过面试会出现的")]),e._v(" "),r("li",[e._v("本书分为两个部分:\n"),r("ul",[r("li",[e._v("数据结构和算法课本\n"),r("ul",[r("li",[e._v("优点:\n"),r("ul",[r("li",[e._v("跟其他算法课本一样是个很棒的复习素材")]),e._v(" "),r("li",[e._v("包含作者以往解决工业及学术上问题的经验的故事")]),e._v(" "),r("li",[e._v("含C语言代码示例")])])]),e._v(" "),r("li",[e._v("缺点:\n"),r("ul",[r("li",[e._v("某些地方跟《算法导论》（CLRS）一样艰深，但在某些主题，算法导论或许是更好的选择。")]),e._v(" "),r("li",[e._v("第7、8、9章有点难以消化，因为某些地方并没有解释得很清楚，或者根本上我就是个学渣")]),e._v(" "),r("li",[e._v("别会错意了，我很喜欢 Skiena 的教学方法以及他的风格。")])])])])]),e._v(" "),r("li",[e._v("算法目录:\n"),r("ul",[r("li",[e._v("这个部分是买这本书的最大原因")]),e._v(" "),r("li",[e._v("我即将着手进行这部分，一旦完成这部分我会再更新上来")])])])])]),e._v(" "),r("li",[e._v("可以在 kindle 上租")]),e._v(" "),r("li",[e._v("解答：\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://web.archive.org/web/20150404194210/http://www.algorithm.cs.sunysb.edu/algowiki/index.php/The_Algorithms_Design_Manual_(Second_Edition)",target:"_blank",rel:"noopener noreferrer"}},[e._v("解答"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www3.cs.stonybrook.edu/~skiena/algorist/book/errata",target:"_blank",rel:"noopener noreferrer"}},[e._v("勘误表"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"http://jeffe.cs.illinois.edu/teaching/algorithms/",target:"_blank",rel:"noopener noreferrer"}},[e._v("算法"),r("OutboundLink")],1),e._v(" (Jeff Erickson)")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.amazon.com/Write-Great-Code-Understanding-Machine/dp/1593270038",target:"_blank",rel:"noopener noreferrer"}},[e._v("编程卓越之道（第一卷）：深入理解计算机"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("该书于2004年出版，虽然有些过时，但是对于简单了解计算机而言，这是一个了不起的资源")]),e._v(" "),r("li",[e._v("作者发明了"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/High_Level_Assembly",target:"_blank",rel:"noopener noreferrer"}},[e._v("高阶组合语言 HLA"),r("OutboundLink")],1),e._v("，所以提到，并且举了一些HLA的例子。里面没有用到很多，但都是很棒的组合语言的例子。")]),e._v(" "),r("li",[e._v("这些章节值得阅读，为你提供良好的基础：\n"),r("ul",[r("li",[e._v("第2章──数字表示")]),e._v(" "),r("li",[e._v("第3章──二进制算术和位运算")]),e._v(" "),r("li",[e._v("第4章──浮点表示")]),e._v(" "),r("li",[e._v("第5章──字符表示")]),e._v(" "),r("li",[e._v("第6章──内存组织和访问")]),e._v(" "),r("li",[e._v("第7章──组合数据类型和内存对象")]),e._v(" "),r("li",[e._v("第9章──CPU体系结构")]),e._v(" "),r("li",[e._v("第10章──指令集架构")]),e._v(" "),r("li",[e._v("第11章──内存体系结构和组织")])])])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.amazon.com/Introduction-Algorithms-fourth-Thomas-Cormen/dp/026204630X",target:"_blank",rel:"noopener noreferrer"}},[e._v("算法导论"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("strong",[e._v("重要提示")]),e._v("：读这本书的价值有限。本书很好地回顾了算法和数据结构，但不会教你如何编写良好的代码。你必须能够有效地编写一个不错的解决方案")]),e._v(" "),r("li",[e._v("又称 CLR，有时是 CLRS，因为 Stein 最后才加入")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.amazon.com/dp/0128119055",target:"_blank",rel:"noopener noreferrer"}},[e._v("计算机体系结构，第六版：定量方法"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("对于更丰富、更时新（2017年）但较长的处理方式")])])])]),e._v(" "),r("h2",{attrs:{id:"系统设计、可扩展性和数据处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#系统设计、可扩展性和数据处理"}},[e._v("#")]),e._v(" 系统设计、可扩展性和数据处理")]),e._v(" "),r("p",[r("strong",[e._v("如果您有4年以上的工作经验，可以预期会遇到系统设计问题。")])]),e._v(" "),r("ul",[r("li",[e._v("可扩展性和系统设计是一个非常广泛的主题，涵盖了许多内容和资源，\n因为在设计一个可以扩展的软件/硬件系统时需要考虑很多因素。\n预计需要花费相当多的时间来学习这方面的知识。")]),e._v(" "),r("li",[e._v("考虑要点：\n"),r("ul",[r("li",[e._v("可扩展性\n"),r("ul",[r("li",[e._v("将大数据集归纳为单一值")]),e._v(" "),r("li",[e._v("将一个数据集转换为另一个数据集")]),e._v(" "),r("li",[e._v("处理海量数据")])])]),e._v(" "),r("li",[e._v("系统设计\n"),r("ul",[r("li",[e._v("功能集")]),e._v(" "),r("li",[e._v("接口")]),e._v(" "),r("li",[e._v("类层次结构")]),e._v(" "),r("li",[e._v("在特定约束下设计系统")]),e._v(" "),r("li",[e._v("简单性和鲁棒性")]),e._v(" "),r("li",[e._v("权衡")]),e._v(" "),r("li",[e._v("性能分析和优化")])])])])]),e._v(" "),r("li",[e._v("[ ] "),r("strong",[e._v("从这里开始")]),e._v(": "),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer",target:"_blank",rel:"noopener noreferrer"}},[e._v("The System Design Primer"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://www.hiredintech.com/system-design/",target:"_blank",rel:"noopener noreferrer"}},[e._v("HiredInTech的系统设计"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.quora.com/How-do-I-prepare-to-answer-design-questions-in-a-technical-interview?redirected_qid=1500023",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何准备回答技术面试中的设计问题？"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://javascript.plainenglish.io/8-steps-guide-to-ace-a-system-design-interview-7a5a797f4d7d",target:"_blank",rel:"noopener noreferrer"}},[e._v("通过8个步骤掌握系统设计面试"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=UrYLYV7WSHM",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据库规范化 - 第一范式、第二范式、第三范式和第四范式（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://github.com/checkcheckzz/system-design-interview",target:"_blank",rel:"noopener noreferrer"}},[e._v("系统设计面试 "),r("OutboundLink")],1),e._v(" - 这个资源有很多内容。浏览文章和示例。我列出了一些示例在下面。")]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://web.archive.org/web/20120716060051/http://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何在系统设计面试中脱颖而出"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://everythingisdata.wordpress.com/2009/10/17/numbers-everyone-should-know/",target:"_blank",rel:"noopener noreferrer"}},[e._v("每个人都应该了解的数字"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://blog.tsunanet.net/2010/11/how-long-does-it-take-to-make-context.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("进行上下文切换需要多长时间？"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=srOgpXECblk",target:"_blank",rel:"noopener noreferrer"}},[e._v("跨数据中心的事务（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://ksat.me/a-plain-english-introduction-to-cap-theorem",target:"_blank",rel:"noopener noreferrer"}},[e._v("CAP定理的简明英文介绍"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=cQP8WApzIQQ&list=PLrw6a1wE39_tb2fErI4-WkMbsvGQk9_UB",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.824：分布式系统，2020年春季（20个视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 共识算法：\n"),r("ul",[r("li",[e._v("[ ] Paxos - "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=s8JqcZtvnsM",target:"_blank",rel:"noopener noreferrer"}},[e._v("Paxos协议 - Computerphile（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] Raft - "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=P9Ydif5_qvE",target:"_blank",rel:"noopener noreferrer"}},[e._v("Raft分布式共识算法简介（视频）"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://raft.github.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("易于理解的论文"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://thesecretlivesofdata.com/raft/",target:"_blank",rel:"noopener noreferrer"}},[e._v("信息图"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://www.tom-e-white.com/2007/11/consistent-hashing.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一致性哈希"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://horicky.blogspot.com/2009/11/nosql-patterns.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("NoSQL模式"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 可扩展性：\n"),r("ul",[r("li",[e._v("您不需要掌握所有这些内容，只需选择一些您感兴趣的。")]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=-W9F__D3oY4",target:"_blank",rel:"noopener noreferrer"}},[e._v("优秀的概述（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] 短系列：\n"),r("ul",[r("li",[r("a",{attrs:{href:"http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones",target:"_blank",rel:"noopener noreferrer"}},[e._v("克隆"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据库"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache",target:"_blank",rel:"noopener noreferrer"}},[e._v("缓存"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism",target:"_blank",rel:"noopener noreferrer"}},[e._v("异步性"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://www.aosabook.org/en/distsys.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("可扩展的Web架构和分布式系统"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://pages.cs.wisc.edu/~zuyu/files/fallacies.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("分布式计算的谬误解释"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=modXC5IWTJI",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jeff Dean - 在Google构建软件系统以及吸取的教训（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://lethain.com/introduction-to-architecting-systems-for-scale/",target:"_blank",rel:"noopener noreferrer"}},[e._v("架构师为规模而设计的介绍"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=9nWyWwY2Onc",target:"_blank",rel:"noopener noreferrer"}},[e._v("缩放移动游戏以面向全球受众使用App Engine和Cloud Datastore（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=H4vMcD7zKM0",target:"_blank",rel:"noopener noreferrer"}},[e._v("谷歌是如何进行面向全球基础设施的大规模工程的（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.topcoder.com/thrive/articles/The%20Importance%20of%20Algorithms",target:"_blank",rel:"noopener noreferrer"}},[e._v("算法的重要性"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("分片"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=p0jGmgIrf_M&list=PLRXxvay_m8gqVlExPC5DG3TGWJTaBgqSA&index=4",target:"_blank",rel:"noopener noreferrer"}},[e._v("针对长期目标的工程 - Astrid Atkinson主题演讲（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2012/3/26/7-years-of-youtube-scalability-lessons-in-30-minutes.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("在30分钟内了解YouTube 7年的可扩展性经验"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=G-lGCC4KKok",target:"_blank",rel:"noopener noreferrer"}},[e._v("视频"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2016/8/15/how-paypal-scaled-to-billions-of-transactions-daily-using-ju.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("PayPal如何使用仅8台VM每天处理数十亿次交易"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://blog.clevertap.com/how-to-remove-duplicates-in-large-datasets/",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何在大型数据集中去重"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=3vV4YiqKm1o",target:"_blank",rel:"noopener noreferrer"}},[e._v("通过Jon Cowie深入了解Etsy的规模和工程文化（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://thenewstack.io/led-amazon-microservices-architecture/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Amazon是如何转向自己的微服务架构的"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://eng.uber.com/trip-data-squeeze/",target:"_blank",rel:"noopener noreferrer"}},[e._v("压缩还是不压缩，这是Uber面临的问题"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2016/2/25/when-should-approximate-query-processing-be-used.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("何时应使用近似查询处理？"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2016/2/23/googles-transition-from-single-datacenter-to-failover-to-a-n.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("谷歌从单一数据中心到故障转移再到本地多家数据中心架构的转变"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2016/6/15/the-image-optimization-technology-that-serves-millions-of-re.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("为每天处理数百万请求的图像优化技术"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2016/2/1/a-patreon-architecture-short.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Patreon架构简介"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2016/1/27/tinder-how-does-one-of-the-largest-recommendation-engines-de.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何在Instagram庞大的推荐引擎中决定您将看到谁？"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2016/1/25/design-of-a-modern-cache.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("现代缓存设计"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2016/1/13/live-video-streaming-at-facebook-scale.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("在Facebook规模下进行直播视频流"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2016/1/11/a-beginners-guide-to-scaling-to-11-million-users-on-amazons.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("在亚马逊AWS上如何扩展到1100万以上的用户"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("全面了解Netflix整个堆栈"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/latency-everywhere-and-it-costs-you-sales-how-crush-it",target:"_blank",rel:"noopener noreferrer"}},[e._v("延迟无处不在，而且它会让您丧失销售机会 - 如何应对"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances",target:"_blank",rel:"noopener noreferrer"}},[e._v("Instagram的动力：数百个实例，几十种技术"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Salesforce架构 - 如何处理每天13亿次交易"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ESPN规模上的架构 - 每秒操作10万次“嘟嘟噜嘟嘟噜”"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ]  在下面的“消息、序列化和队列系统”部分查看一些将服务连接在一起的技术信息")]),e._v(" "),r("li",[e._v("[ ] Twitter:\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=5cKTP36HVgI",target:"_blank",rel:"noopener noreferrer"}},[e._v('O\'Reilly MySQL CE 2011: Jeremy Cole, "Big and Small Data at @Twitter" (视频)'),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.infoq.com/presentations/Twitter-Timeline-Scalability",target:"_blank",rel:"noopener noreferrer"}},[e._v("时间轴扩展"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("欲知更多信息，请参阅"),r("a",{attrs:{href:"#video-series"}},[e._v("Video Series")]),e._v(" 部分中的“Mining Massive Datasets”视频系列")])])]),e._v(" "),r("li",[e._v("[ ] 练习系统设计过程：以下是一些建议您在纸上尝试的想法，每个想法都有一些关于如何在现实世界中处理的文档：\n"),r("ul",[r("li",[e._v("复习: "),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer",target:"_blank",rel:"noopener noreferrer"}},[e._v("The System Design Primer"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.hiredintech.com/system-design/",target:"_blank",rel:"noopener noreferrer"}},[e._v("HiredInTech的系统设计"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/jwasham/coding-interview-university/blob/main/extras/cheat%20sheets/system-design.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("速查表"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("流程：\n"),r("ol",[r("li",[e._v("理解问题和范围：\n"),r("ul",[r("li",[e._v("定义用例，与面试官的帮助")]),e._v(" "),r("li",[e._v("提出额外的功能")]),e._v(" "),r("li",[e._v("移除面试官认为超出范围的项目")]),e._v(" "),r("li",[e._v("假设需要高可用性，并将其添加为用例")])])]),e._v(" "),r("li",[e._v("考虑限制：\n"),r("ul",[r("li",[e._v("询问每月有多少个请求")]),e._v(" "),r("li",[e._v("询问每秒有多少个请求（他们可能会主动提供或让您计算）")]),e._v(" "),r("li",[e._v("估计读取与写入的百分比")]),e._v(" "),r("li",[e._v("保持估计时考虑80/20法则")]),e._v(" "),r("li",[e._v("每秒写入多少数据")]),e._v(" "),r("li",[e._v("在5年内所需的总存储量")]),e._v(" "),r("li",[e._v("每秒读取多少数据")])])]),e._v(" "),r("li",[e._v("抽象设计：\n"),r("ul",[r("li",[e._v("层（服务、数据、缓存）")]),e._v(" "),r("li",[e._v("基础架构：负载均衡、消息传递")]),e._v(" "),r("li",[e._v("驱动服务的任何关键算法的粗略概述")]),e._v(" "),r("li",[e._v("考虑瓶颈并确定解决方案")])])])])]),e._v(" "),r("li",[e._v("练习：\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://blog.twitter.com/2010/announcing-snowflake",target:"_blank",rel:"noopener noreferrer"}},[e._v("设计一个随机唯一ID生成系统"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.slideshare.net/dvirsky/introduction-to-redis",target:"_blank",rel:"noopener noreferrer"}},[e._v("设计一个键值数据库"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("设计一个图片分享系统"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://ijcai13.org/files/tutorial_slides/td3.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("设计一个推荐系统"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.hiredintech.com/system-design/the-system-design-process/",target:"_blank",rel:"noopener noreferrer"}},[e._v("设计一个URL缩短系统：来自上面的复制"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://web.archive.org/web/20220217064329/https://adayinthelifeof.nl/2011/02/06/memcache-internals/",target:"_blank",rel:"noopener noreferrer"}},[e._v("设计一个缓存系统"),r("OutboundLink")],1)])])])])])]),e._v(" "),r("h2",{attrs:{id:"附加学习"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#附加学习"}},[e._v("#")]),e._v(" 附加学习")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("我把它们加进来是为了让你成为更全方位的软件工程师，并且留意一些技术以及算法，让你拥有更大的工具箱。\n")])])]),r("ul",[r("li",[r("h3",{attrs:{id:"编译器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#编译器"}},[e._v("#")]),e._v(" 编译器")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=IhC7sdYe-Jg",target:"_blank",rel:"noopener noreferrer"}},[e._v("编译器的工作方式，约1分钟（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=CSZLNYF4Klo",target:"_blank",rel:"noopener noreferrer"}},[e._v("Harvard CS50-编译器（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=twodd1KFfGk",target:"_blank",rel:"noopener noreferrer"}},[e._v("C ++（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=FnGCDLhaxKU",target:"_blank",rel:"noopener noreferrer"}},[e._v("了解编译器优化（C ++）（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"emacs-and-vi-m"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#emacs-and-vi-m"}},[e._v("#")]),e._v(" Emacs and vi(m)")]),e._v(" "),r("ul",[r("li",[e._v("熟悉基于 unix 的代码编辑器")]),e._v(" "),r("li",[e._v("vi(m):\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=5givLEMcINQ&index=1&list=PL13bz4SHGmRxlZVmWQ9DvXo1fEg4UdGkr",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 vim 进行编辑 01 - 安装, 设置和模式 (视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://vim-adventures.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("VIM 的冒险之旅"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("4 个视频集:\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=SI8TeVMX8pk",target:"_blank",rel:"noopener noreferrer"}},[e._v("vi/vim 编辑器 - 课程 1"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=F3OO7ZIOaJE",target:"_blank",rel:"noopener noreferrer"}},[e._v("vi/vim 编辑器 - 课程 2"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=1lYD5gwgZIA",target:"_blank",rel:"noopener noreferrer"}},[e._v("vi/vim 编辑器 - 课程 4"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=ZYEccA_nMaI",target:"_blank",rel:"noopener noreferrer"}},[e._v("vi/vim 编辑器 - 课程 3"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Using_Vi_instead_of_Emacs",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 Vi 而不是 Emacs"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("emacs:\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=hbmV1bnQ-i0",target:"_blank",rel:"noopener noreferrer"}},[e._v("基础 Emacs 教程 (视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("3 个视频集:\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=ujODL7MD04Q",target:"_blank",rel:"noopener noreferrer"}},[e._v("Emacs 教程 (初学者) -第 1 部分- 文件命令, 剪切/复制/粘贴,  自定义命令"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=XWpsRupJ4II",target:"_blank",rel:"noopener noreferrer"}},[e._v("Emacs 教程 (初学者 -第 2 部分- Buffer 管理, 搜索, M-x grep 和 rgrep 模式"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=paSgzPso-yc",target:"_blank",rel:"noopener noreferrer"}},[e._v("Emacs 教程 (初学者 -第 3 部分- 表达式, 声明, ~/.emacs 文件和包机制"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=JWD1Fpdd4Pc",target:"_blank",rel:"noopener noreferrer"}},[e._v("Evil 模式: 或许, 我是怎样对 Emacs 路人转粉的 (视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Writing_C_programs_with_Emacs",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 Emacs 开发 C 程序"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=48JlgiBpw_I&t=0s",target:"_blank",rel:"noopener noreferrer"}},[e._v("Emacs 绝对初学者指南（David Wilson的视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://systemcrafters.net/emacs-essentials/absolute-beginners-guide-to-emacs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Emacs 绝对初学者指南（David Wilson 批注）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"unix-命令行工具"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#unix-命令行工具"}},[e._v("#")]),e._v(" Unix 命令行工具")]),e._v(" "),r("ul",[r("li",[e._v("下列内容包含优秀工具")]),e._v(" "),r("li",[e._v("bash")]),e._v(" "),r("li",[e._v("cat")]),e._v(" "),r("li",[e._v("grep")]),e._v(" "),r("li",[e._v("sed")]),e._v(" "),r("li",[e._v("awk")]),e._v(" "),r("li",[e._v("curl or wget")]),e._v(" "),r("li",[e._v("sort")]),e._v(" "),r("li",[e._v("tr")]),e._v(" "),r("li",[e._v("uniq")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Strace",target:"_blank",rel:"noopener noreferrer"}},[e._v("strace"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://danielmiessler.com/study/tcpdump/",target:"_blank",rel:"noopener noreferrer"}},[e._v("tcpdump"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"信息论-视频"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#信息论-视频"}},[e._v("#")]),e._v(" 信息论 (视频)")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.khanacademy.org/computing/computer-science/informationtheory",target:"_blank",rel:"noopener noreferrer"}},[e._v("Khan Academy 可汗学院"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("更多有关马尔可夫的内容:\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/waxgx/core-markov-text-generation",target:"_blank",rel:"noopener noreferrer"}},[e._v("马尔可夫内容生成（Core Markov Text Generation）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/gZhiC/core-implementing-markov-text-generation",target:"_blank",rel:"noopener noreferrer"}},[e._v("Core Implementing Markov Text Generation马尔可夫内容生成实现"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/EUjrq/project-markov-text-generation-walk-through",target:"_blank",rel:"noopener noreferrer"}},[e._v("一个马尔可夫内容生成器的项目（Project = Markov Text Generation Walk Through）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("关于更多信息，请参照下方 MIT 6.050J 信息和系统复杂度的内容。")])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"奇偶校验位-汉明码-视频"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#奇偶校验位-汉明码-视频"}},[e._v("#")]),e._v(" 奇偶校验位 & 汉明码 (视频)")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=q-3BctoUpHE",target:"_blank",rel:"noopener noreferrer"}},[e._v("入门"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=DdMcAUlxh1M",target:"_blank",rel:"noopener noreferrer"}},[e._v("奇偶校验位"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("汉明码(Hamming Code):\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=1A_NcXxdoCc",target:"_blank",rel:"noopener noreferrer"}},[e._v("发现错误"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=JAMLuxdHH8o",target:"_blank",rel:"noopener noreferrer"}},[e._v("修正错误"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=wbH2VxzmoZk",target:"_blank",rel:"noopener noreferrer"}},[e._v("检查错误"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"系统熵值-entropy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#系统熵值-entropy"}},[e._v("#")]),e._v(" 系统熵值（Entropy）")]),e._v(" "),r("ul",[r("li",[e._v("请参考下方视频")]),e._v(" "),r("li",[e._v("观看之前，请先确定观看了信息论的视频")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://youtu.be/JnJq3Py0dyM?t=176",target:"_blank",rel:"noopener noreferrer"}},[e._v("信息理论, 克劳德·香农, 熵值, 系统冗余, 数据比特压缩 (视频)"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"密码学"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#密码学"}},[e._v("#")]),e._v(" 密码学")]),e._v(" "),r("ul",[r("li",[e._v("请参考下方视频")]),e._v(" "),r("li",[e._v("观看之前，请先确定观看了信息论的视频")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.khanacademy.org/computing/computer-science/%E5%AF%86%E7%A0%81%E5%AD%A6",target:"_blank",rel:"noopener noreferrer"}},[e._v("可汗学院"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=KqqOXndnvic&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=30",target:"_blank",rel:"noopener noreferrer"}},[e._v("密码学: 哈希函数"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=9TNI2wHmaeI&index=31&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp",target:"_blank",rel:"noopener noreferrer"}},[e._v("密码学: 加密"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"压缩"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#压缩"}},[e._v("#")]),e._v(" 压缩")]),e._v(" "),r("ul",[r("li",[e._v("观看之前，请先确定观看了信息论的视频")]),e._v(" "),r("li",[e._v("Computerphile (视频)：\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=Lto-ajuqW3w",target:"_blank",rel:"noopener noreferrer"}},[e._v("压缩"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=M5c_RFKVkko",target:"_blank",rel:"noopener noreferrer"}},[e._v("压缩熵值"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=umTbivyJoiI",target:"_blank",rel:"noopener noreferrer"}},[e._v("由上而下的树 (霍夫曼编码树)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=DV8efuB3h2g",target:"_blank",rel:"noopener noreferrer"}},[e._v("额外比特 - 霍夫曼编码树"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=goOa3DGezUA",target:"_blank",rel:"noopener noreferrer"}},[e._v("优雅的压缩数据 (无损数据压缩方法)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=cCDCfoHTsaU",target:"_blank",rel:"noopener noreferrer"}},[e._v("Text Compression Meets Probabilities"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLOU2XLYxmsIJGErt5rrCqaSGTMyyqNt2H",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据压缩的艺术"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=whGwm0Lky2s",target:"_blank",rel:"noopener noreferrer"}},[e._v("(可选) 谷歌开发者：GZIP 还差远了呢!"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"计算机安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#计算机安全"}},[e._v("#")]),e._v(" 计算机安全")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT（23个视频）"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=GqmQg-cszw4&index=1&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh",target:"_blank",rel:"noopener noreferrer"}},[e._v("威胁模型：入门"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=6bwzNg5qQ0o&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&index=2",target:"_blank",rel:"noopener noreferrer"}},[e._v("控制劫持攻击"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=drQyrzRoRiA&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&index=3",target:"_blank",rel:"noopener noreferrer"}},[e._v("缓冲区溢出漏洞攻击和防御"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=6SIJmoE9L9g&index=4&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh",target:"_blank",rel:"noopener noreferrer"}},[e._v("优先权区分"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=8VqTSY-11F4&index=5&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh",target:"_blank",rel:"noopener noreferrer"}},[e._v("能力"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=VEV74hwASeU&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&index=6",target:"_blank",rel:"noopener noreferrer"}},[e._v("在沙盒中运行原生代码"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=chkFBigodIw&index=7&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh",target:"_blank",rel:"noopener noreferrer"}},[e._v("网络安全模型"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=EBQIGy1ROLY&index=8&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh",target:"_blank",rel:"noopener noreferrer"}},[e._v("网络安全应用"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=yRVZPvHYHzw&index=9&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh",target:"_blank",rel:"noopener noreferrer"}},[e._v("标志化执行"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=SIEVvk3NVuk&index=11&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh",target:"_blank",rel:"noopener noreferrer"}},[e._v("网络安全"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=QOtA76ga_fY&index=12&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh",target:"_blank",rel:"noopener noreferrer"}},[e._v("网络协议"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=PuVMkSEcPiI&index=15&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh",target:"_blank",rel:"noopener noreferrer"}},[e._v("旁路攻击"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"垃圾回收"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收"}},[e._v("#")]),e._v(" 垃圾回收")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=iHVs_HkjdmI",target:"_blank",rel:"noopener noreferrer"}},[e._v("Python 中的垃圾回收 (视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.infoq.com/presentations/garbage-collection-benefits",target:"_blank",rel:"noopener noreferrer"}},[e._v("深度解析：论垃圾回收在 JAVA 中的重要性"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=P-8Z0-MhdQs&list=PLdzf4Clw0VbOEWOS_sLhT_9zaiQDrS5AR&index=3",target:"_blank",rel:"noopener noreferrer"}},[e._v("深度解析：论垃圾回收在 Python 中的重要性(视频)"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"并行编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#并行编程"}},[e._v("#")]),e._v(" 并行编程")]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.coursera.org/learn/parprog1/home/week/1",target:"_blank",rel:"noopener noreferrer"}},[e._v("Coursera (Scala)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=uY85GkaYzBk",target:"_blank",rel:"noopener noreferrer"}},[e._v("用于高性能并行计算的高效Python（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"消息传递-序列化和队列系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#消息传递-序列化和队列系统"}},[e._v("#")]),e._v(" 消息传递，序列化和队列系统")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://thrift.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Thrift"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://thrift-tutorial.readthedocs.io/en/latest/intro.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("教程"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developers.google.com/protocol-buffers/",target:"_blank",rel:"noopener noreferrer"}},[e._v("协议缓冲"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/tutorials",target:"_blank",rel:"noopener noreferrer"}},[e._v("教程"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.grpc.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("gRPC"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=5tmPvSe7xXQ&list=PLcTqM9n_dieN0k1nSeN36Z_ppKnvMJoly&index=1",target:"_blank",rel:"noopener noreferrer"}},[e._v("gRPC 对于JAVA开发者的入门教程（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"http://redis.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redis"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://try.redis.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("教程"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://aws.amazon.com/sqs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Amazon的 SQS 系统 (队列)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://aws.amazon.com/sns/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Amazon的 SNS 系统 (pub-sub)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.rabbitmq.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("RabbitMQ"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.rabbitmq.com/getstarted.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("入门教程"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.celeryproject.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Celery"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://docs.celeryproject.org/en/latest/getting-started/first-steps-with-celery.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Celery入门"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"http://zeromq.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ZeroMQ"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://zeromq.org/intro:read-the-manual",target:"_blank",rel:"noopener noreferrer"}},[e._v("入门教程"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"http://activemq.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ActiveMQ"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://kafka.apache.org/documentation.html#introduction",target:"_blank",rel:"noopener noreferrer"}},[e._v("Kafka"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://msgpack.org/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("MessagePack"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://avro.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Avro"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"a-搜索算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#a-搜索算法"}},[e._v("#")]),e._v(" A*搜索算法")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/A*_search_algorithm",target:"_blank",rel:"noopener noreferrer"}},[e._v("A 搜索算法"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=-L-WgKMFuhE",target:"_blank",rel:"noopener noreferrer"}},[e._v("A* 路径搜索（E01：算法解释）（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"快速傅里叶变换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#快速傅里叶变换"}},[e._v("#")]),e._v(" 快速傅里叶变换")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/",target:"_blank",rel:"noopener noreferrer"}},[e._v("傅立叶变换的交互式指南"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.askamathematician.com/2012/09/q-what-is-a-fourier-transform-what-is-it-used-for/",target:"_blank",rel:"noopener noreferrer"}},[e._v("什么是傅立叶变换？论傅立叶变换的用途"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=Xxut2PN-V8Q",target:"_blank",rel:"noopener noreferrer"}},[e._v("什么是傅立叶变换？ (视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=iTMn0Kt18tg&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=4",target:"_blank",rel:"noopener noreferrer"}},[e._v("分而治之：FFT（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://jakevdp.github.io/blog/2013/08/28/understanding-the-fft/",target:"_blank",rel:"noopener noreferrer"}},[e._v("FTT 是什么"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"布隆过滤器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#布隆过滤器"}},[e._v("#")]),e._v(" 布隆过滤器")]),e._v(" "),r("ul",[r("li",[e._v("给定布隆过滤器m比特位和k个哈希函数，插入和成员检测都会是 O(k)。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=-SuTGoFYjZs",target:"_blank",rel:"noopener noreferrer"}},[e._v("布隆过滤器（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=qBTdukbzc78",target:"_blank",rel:"noopener noreferrer"}},[e._v("布隆过滤器 | 数据挖掘 | Stanford University（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://billmill.org/bloomfilter-tutorial/",target:"_blank",rel:"noopener noreferrer"}},[e._v("教程"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://blog.michaelschmatz.com/2016/04/11/how-to-write-a-bloom-filter-cpp/",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何写一个布隆过滤器应用"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"hyperloglog"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hyperloglog"}},[e._v("#")]),e._v(" HyperLogLog")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://highscalability.com/blog/2012/4/5/big-data-counting-how-to-count-a-billion-distinct-objects-us.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何仅使用1.5KB内存计算十亿个不同的对象"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"局部敏感哈希"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#局部敏感哈希"}},[e._v("#")]),e._v(" 局部敏感哈希")]),e._v(" "),r("ul",[r("li",[e._v("用于确定文件的相似性")]),e._v(" "),r("li",[e._v("MD5 或 SHA 的反义词，用于确定2个文档/字符串是否完全相同")]),e._v(" "),r("li",[r("a",{attrs:{href:"http://ferd.ca/simhashing-hopefully-made-simple.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Simhashing（希望如此）变得简单"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"van-emde-boas-树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#van-emde-boas-树"}},[e._v("#")]),e._v(" van Emde Boas 树")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=hmReJCupbNU&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=6",target:"_blank",rel:"noopener noreferrer"}},[e._v("分而治之：van Emde Boas 树 (视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2012/lecture-notes/MIT6_046JS12_lec15.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT课堂笔记"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"增强数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#增强数据结构"}},[e._v("#")]),e._v(" 增强数据结构")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://youtu.be/zksIj9O8_jc?list=PL4BBB74C7D2A1049C&t=950",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B 第 39 课: 增强数据结构"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"平衡查找树-balanced-search-trees"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#平衡查找树-balanced-search-trees"}},[e._v("#")]),e._v(" 平衡查找树（Balanced search trees）")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("掌握至少一种平衡查找树（并懂得如何实现）：")])]),e._v(" "),r("li",[r("p",[e._v("“在各种平衡查找树当中，AVL 树和2-3树已经成为了过去，而红黑树（red-black trees）看似变得越来越受人青睐。\n这种令人特别感兴趣的数据结构，亦称伸展树（splay tree）。\n它可以自我管理，且会使用轮换来移除任何访问过根节点的键。” —— Skiena")])]),e._v(" "),r("li",[r("p",[e._v("因此，在各种各样的平衡查找树当中，我选择了伸展树来实现。\n虽然，通过我的阅读，我发现在面试中并不会被要求实现一棵平衡查找树。\n但是，为了胜人一筹，我们还是应该看看如何去实现。在阅读了大量关于红黑树的代码后，\n我才发现伸展树的实现确实会使得各方面更为高效。")]),e._v(" "),r("ul",[r("li",[e._v("伸展树：插入、查找、删除函数的实现，而如果你最终实现了红黑树，那么请尝试一下：")]),e._v(" "),r("li",[e._v("跳过删除函数，直接实现搜索和插入功能")])])]),e._v(" "),r("li",[r("p",[e._v("我希望能阅读到更多关于 B 树的资料，因为它也被广泛地应用到大型的数据集当中。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Self-balancing_binary_search_tree",target:"_blank",rel:"noopener noreferrer"}},[e._v("自平衡二叉查找树"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("AVL 树")])]),e._v(" "),r("ul",[r("li",[e._v("实际中：\n我能告诉你的是，该种树并无太多的用途，但我能看到有用的地方在哪里：\nAVL 树是另一种平衡查找树结构。其可支持时间复杂度为 O(log n) 的查询、插入及删除。\n它比红黑树严格意义上更为平衡，从而导致插入和删除更慢，但遍历却更快。正因如此，才彰显其结构的魅力。\n只需要构建一次，就可以在不重新构造的情况下读取，\n适合于实现诸如语言字典（或程序字典，如一个汇编程序或解释程序的操作码）。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=FNeL18KsWPc&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=6",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT AVL 树 / AVL 树的排序（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/Qq5E0/avl-trees",target:"_blank",rel:"noopener noreferrer"}},[e._v("AVL 树（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/PKEBC/avl-tree-implementation",target:"_blank",rel:"noopener noreferrer"}},[e._v("AVL 树的实现（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/22BgE/split-and-merge",target:"_blank",rel:"noopener noreferrer"}},[e._v("分离与合并"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL9xmBV_5YoZOUFgdIeOPuH6cfSnNRMau-",target:"_blank",rel:"noopener noreferrer"}},[e._v("[Review] AVL Trees (playlist) in 19 minutes (video)"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("伸展树")])]),e._v(" "),r("ul",[r("li",[e._v("实际中：\n伸展树一般用于缓存、内存分配者、路由器、垃圾回收者、数据压缩、ropes\n（字符串的一种替代品，用于存储长串的文本字符）、\nWindows NT（虚拟内存、网络及文件系统）等的实现。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=Najzh1rYQTo&index=23&list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B：伸展树（Splay trees）（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("MIT 教程：伸展树（Splay trees）：\n"),r("ul",[r("li",[e._v("该教程会过于学术，但请观看到最后的10分钟以确保掌握。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=QnPl_Y6EqMo",target:"_blank",rel:"noopener noreferrer"}},[e._v("视频"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("红黑树")])]),e._v(" "),r("ul",[r("li",[e._v("这些是2-3棵树的翻译（请参见下文）。")]),e._v(" "),r("li",[e._v("实际中：红黑树提供了在最坏情况下插入操作、删除操作和查找操作的时间保证。\n这些时间值的保障不仅对时间敏感型应用有用，例如实时应用，\n还对在其他数据结构中块的构建非常有用，\n而这些数据结构都提供了最坏情况下的保障；\n例如，许多用于计算几何学的数据结构都可以基于红黑树，\n而目前 Linux 内核所采用的完全公平调度器（the Completely Fair Scheduler）也使用到了该种树。\n在 Java 8中，Collection HashMap也从原本用Linked List实现，\n储存特定元素的哈希码，改为用红黑树实现。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://youtu.be/1W3x0f_RmUo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3871",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aduni —— 算法 —— 课程4（该链接直接跳到开始部分）（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=hm2GHwyKF1o&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=5",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aduni —— 算法 —— 课程5（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Red%E2%80%93black_tree",target:"_blank",rel:"noopener noreferrer"}},[e._v("黑树（Black Tree）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.topcoder.com/community/data-science/data-science-tutorials/an-introduction-to-binary-search-and-red-black-trees/",target:"_blank",rel:"noopener noreferrer"}},[e._v("二分查找及红黑树的介绍"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL9xmBV_5YoZNqDI8qfOZgzbqahCUmUEin",target:"_blank",rel:"noopener noreferrer"}},[e._v("[Review] Red-Black Trees (playlist) in 30 minutes (video)"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("2-3查找树")])]),e._v(" "),r("ul",[r("li",[e._v("实际中：\n2-3树的元素插入非常快速，但却有着查询慢的代价（因为相比较 AVL 树来说，其高度更高）。")]),e._v(" "),r("li",[e._v("你会很少用到2-3树。这是因为，其实现过程中涉及到不同类型的节点。因此，人们更多地会选择红黑树。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=C3SsdUqasD4&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&index=2",target:"_blank",rel:"noopener noreferrer"}},[e._v("2-3树的直感与定义（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=iYvBtGKsqSg&index=3&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6",target:"_blank",rel:"noopener noreferrer"}},[e._v("2-3树的二元观点"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=TOb1tuEZ2X4&index=5&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp",target:"_blank",rel:"noopener noreferrer"}},[e._v("2-3树（学生叙述）（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("2-3-4树 (亦称2-4树)")])]),e._v(" "),r("ul",[r("li",[e._v("实际中：\n对于每一棵2-4树，都有着对应的红黑树来存储同样顺序的数据元素。\n在2-4树上进行插入及删除操作等同于在红黑树上进行颜色翻转及轮换。\n这使得2-4树成为一种用于掌握红黑树背后逻辑的重要工具。\n这就是为什么许多算法引导文章都会在介绍红黑树之前，先介绍2-4树，尽管"),r("strong",[e._v("2-4树在实际中并不经常使用")]),e._v("。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=zqrqYXkth6Q&index=26&list=PL4BBB74C7D2A1049C",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 61B Lecture 26：平衡查找树（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=DQdMYevEyE4&index=4&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6",target:"_blank",rel:"noopener noreferrer"}},[e._v("自底向上的2-4树（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=2679VQ26Fp4&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&index=5",target:"_blank",rel:"noopener noreferrer"}},[e._v("自顶向下的2-4树（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("N 叉树（K 叉树、M 叉树）")])]),e._v(" "),r("ul",[r("li",[e._v("注意：N 或 K 指的是分支系数（即树的最大分支数）：")]),e._v(" "),r("li",[e._v("二叉树是一种分支系数为2的树")]),e._v(" "),r("li",[e._v("2-3树是一种分支系数为3的树")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/K-ary_tree",target:"_blank",rel:"noopener noreferrer"}},[e._v("K 叉树"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("B 树")])]),e._v(" "),r("ul",[r("li",[e._v("有趣的是：为啥叫 B 仍然是一个神秘。因为 B 可代表波音（Boeing）、平衡（Balanced）或 Bayer（联合创造者）")]),e._v(" "),r("li",[e._v("实际中：\nB 树会被广泛适用于数据库中，而现代大多数的文件系统都会使用到这种树（或变种）。\n除了运用在数据库中，B 树也会被用于文件系统以快速访问一个文件的任意块。\n但存在着一个基本的问题，\n那就是如何将文件块 i 转换成一个硬盘块（或一个柱面-磁头-扇区）上的地址。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/B-tree",target:"_blank",rel:"noopener noreferrer"}},[e._v("B 树"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://btechsmartclass.com/data_structures/b-trees.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("B 树数据结构"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=I22wEC1tTGo&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&index=6",target:"_blank",rel:"noopener noreferrer"}},[e._v("B 树的介绍（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=s3bCdZGrgpA&index=7&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6",target:"_blank",rel:"noopener noreferrer"}},[e._v("B 树的定义及其插入操作（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=svfnVhJOfMc&index=8&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6",target:"_blank",rel:"noopener noreferrer"}},[e._v("B 树的删除操作（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=V3omVLzI0WE&index=7&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.851 —— 内存层次模块（Memory Hierarchy Models）（视频）"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("覆盖有高速缓存参数无关型（cache-oblivious）B 树和非常有趣的数据结构")]),e._v(" "),r("li",[e._v("头37分钟讲述的很专业，或许可以跳过（B 指块的大小、即缓存行的大小）")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL9xmBV_5YoZNFPPv98DjTdD9X6UI9KMHz",target:"_blank",rel:"noopener noreferrer"}},[e._v("[Review] B-Trees (playlist) in 26 minutes (video)"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"k-d树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#k-d树"}},[e._v("#")]),e._v(" k-D树")]),e._v(" "),r("ul",[r("li",[e._v("非常适合在矩形或更高维度的对象中查找点数")]),e._v(" "),r("li",[e._v("最适合k近邻")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=Y4ZgLlDfKDg",target:"_blank",rel:"noopener noreferrer"}},[e._v("kNN K-d树算法（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"跳表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#跳表"}},[e._v("#")]),e._v(" 跳表")]),e._v(" "),r("ul",[r("li",[e._v('"有一种非常迷幻的数据类型" - Skiena')]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=2g9OSRKJuzM&index=10&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp",target:"_blank",rel:"noopener noreferrer"}},[e._v("随机化: 跳表 (视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Skip_list",target:"_blank",rel:"noopener noreferrer"}},[e._v("更生动详细的解释"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"网络流"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络流"}},[e._v("#")]),e._v(" 网络流")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=v1VgJmkEJW0",target:"_blank",rel:"noopener noreferrer"}},[e._v("5分钟简析 Ford-Fulkerson──一步步示例 (视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=v1VgJmkEJW0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ford-Fulkerson 算法 (视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=2vhN4Ice5jI",target:"_blank",rel:"noopener noreferrer"}},[e._v("网络流 (视频)"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"不相交集-联合查找"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不相交集-联合查找"}},[e._v("#")]),e._v(" 不相交集 & 联合查找")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=MAEGXTwmUsI&list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd&index=21",target:"_blank",rel:"noopener noreferrer"}},[e._v("UCB 61B - 不相交集；排序 & 选择(视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-part1/home/week/1",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sedgewick算法──Union-Find（6视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"快速处理的数学"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#快速处理的数学"}},[e._v("#")]),e._v(" 快速处理的数学")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=eCaXlAaN2uE&index=11&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("整数运算, Karatsuba 乘法 (视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=ru7mWZJlRQg",target:"_blank",rel:"noopener noreferrer"}},[e._v("中国剩余定理 (在密码学中的使用) (视频)"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"树堆-treap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#树堆-treap"}},[e._v("#")]),e._v(" 树堆 (Treap)")]),e._v(" "),r("ul",[r("li",[e._v("一个二叉搜索树和一个堆的组合")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Treap",target:"_blank",rel:"noopener noreferrer"}},[e._v("树堆"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=6podLUYinH8",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据结构：树堆的讲解（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.cs.cmu.edu/~scandal/papers/treaps-spaa98.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("集合操作的应用(Applications in set operations)"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"线性规划-linear-programming-视频"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#线性规划-linear-programming-视频"}},[e._v("#")]),e._v(" 线性规划（Linear Programming）（视频）")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=M4K6HYLHREQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("线性规划"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=2ACJ9ewUC6U",target:"_blank",rel:"noopener noreferrer"}},[e._v("寻找最小成本"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=8AA_81xI3ik",target:"_blank",rel:"noopener noreferrer"}},[e._v("寻找最大值"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=44pAWI7v5Zk",target:"_blank",rel:"noopener noreferrer"}},[e._v("用 Python 解决线性方程式──单纯形算法"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"几何-凸包-geometry-convex-hull-视频"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#几何-凸包-geometry-convex-hull-视频"}},[e._v("#")]),e._v(" 几何：凸包（Geometry, Convex hull）（视频）")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://youtu.be/XIAQRlNkJAw?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3164",target:"_blank",rel:"noopener noreferrer"}},[e._v("Graph Alg. IV: 几何算法介绍 - 第 9 课"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=J5aJEcOr6Eo&index=10&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Graham & Jarvis: 几何算法 - 第 10 课"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=EzeYI7p9MjU&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=2",target:"_blank",rel:"noopener noreferrer"}},[e._v("分而治之: 凸包, 中值查找"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("h3",{attrs:{id:"离散数学"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#离散数学"}},[e._v("#")]),e._v(" 离散数学")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://www.infocobuild.com/education/audio-video-courses/computer-science/cs70-spring2015-berkeley.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("计算机科学70，001 - 2015年春季 - 离散数学与概率论"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLWX710qNZo_sNlSWRMVIh6kfTjolNaZ8t",target:"_blank",rel:"noopener noreferrer"}},[e._v("离散数学由Shai Simonson（19个视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nptel.ac.in/courses/106/106/106106183/",target:"_blank",rel:"noopener noreferrer"}},[e._v("离散数学由印度理工学院罗帕尔分校NPTEL提供"),r("OutboundLink")],1)])])])]),e._v(" "),r("hr"),e._v(" "),r("h2",{attrs:{id:"一些主题的额外内容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一些主题的额外内容"}},[e._v("#")]),e._v(" 一些主题的额外内容")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("我添加了这些内容来加强上面已经提出的一些观点，但是不想把它们放在上面，因为那样会太多。\n对于一个主题来说，过度处理很容易。\n你希望在本世纪被雇佣吗？\n")])])]),r("ul",[r("li",[r("p",[r("strong",[e._v("SOLID")])]),e._v(" "),r("ul",[r("li",[e._v("[ ] "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=TMuno5RZNeE",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bob Martin SOLID Principles of Object Oriented and Agile Design (视频)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("[ ] S - "),r("a",{attrs:{href:"http://www.oodesign.com/single-responsibility-principle.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("单一职责原则 | 每个对象负责一个单一职责"),r("OutboundLink")],1),e._v(" | "),r("a",{attrs:{href:"http://www.javacodegeeks.com/2011/11/solid-single-responsibility-principle.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Single responsibility to each Object"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://docs.google.com/open?id=0ByOwmqah_nuGNHEtcU5OekdDMkk",target:"_blank",rel:"noopener noreferrer"}},[e._v("更多解释"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] O - "),r("a",{attrs:{href:"http://www.oodesign.com/open-close-principle.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("开闭原则"),r("OutboundLink")],1),e._v("  | "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Open/closed_principle",target:"_blank",rel:"noopener noreferrer"}},[e._v("在生产级别上，对象应准备好进行扩展，但不进行修改"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://docs.google.com/a/cleancoder.com/viewer?a=v&pid=explorer&chrome=true&srcid=0BwhCYaYDn8EgN2M5MTkwM2EtNWFkZC00ZTI3LWFjZTUtNTFhZGZiYmUzODc1&hl=en",target:"_blank",rel:"noopener noreferrer"}},[e._v("更多解释"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] L - "),r("a",{attrs:{href:"http://www.oodesign.com/liskov-s-substitution-principle.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("里氏替换原则"),r("OutboundLink")],1),e._v(" | "),r("a",{attrs:{href:"http://stackoverflow.com/questions/56860/what-is-the-liskov-substitution-principle",target:"_blank",rel:"noopener noreferrer"}},[e._v("基类和派生类遵循‘是一个’原则"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://docs.google.com/a/cleancoder.com/viewer?a=v&pid=explorer&chrome=true&srcid=0BwhCYaYDn8EgNzAzZjA5ZmItNjU3NS00MzQ5LTkwYjMtMDJhNDU5ZTM0MTlh&hl=en",target:"_blank",rel:"noopener noreferrer"}},[e._v("更多解释"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] I - "),r("a",{attrs:{href:"http://www.oodesign.com/interface-segregation-principle.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("接口隔离原则"),r("OutboundLink")],1),e._v(" | 客户端不应被强制实现不使用的接口\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=3CtAfl7aXAQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("5分钟内的接口隔离原则（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://docs.google.com/a/cleancoder.com/viewer?a=v&pid=explorer&chrome=true&srcid=0BwhCYaYDn8EgOTViYjJhYzMtMzYxMC00MzFjLWJjMzYtOGJiMDc5N2JkYmJi&hl=en",target:"_blank",rel:"noopener noreferrer"}},[e._v("更多解释"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("[ ] D -"),r("a",{attrs:{href:"http://www.oodesign.com/dependency-inversion-principle.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("依赖反转原则"),r("OutboundLink")],1),e._v(" | 在对象的组合中减少依赖\n"),r("ul",[r("li",[r("a",{attrs:{href:"http://stackoverflow.com/questions/62539/what-is-the-dependency-inversion-principle-and-why-is-it-important",target:"_blank",rel:"noopener noreferrer"}},[e._v("为何依赖反转原则如此重要"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://docs.google.com/a/cleancoder.com/viewer?a=v&pid=explorer&chrome=true&srcid=0BwhCYaYDn8EgMjdlMWIzNGUtZTQ0NC00ZjQ5LTkwYzQtZjRhMDRlNTQ3ZGMz&hl=en",target:"_blank",rel:"noopener noreferrer"}},[e._v("更多解释"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Union-Find")])]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/JssSY/overview",target:"_blank",rel:"noopener noreferrer"}},[e._v("概览"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/EM5D0/naive-implementations",target:"_blank",rel:"noopener noreferrer"}},[e._v("初级实践"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/Mxu0w/trees",target:"_blank",rel:"noopener noreferrer"}},[e._v("树状结构"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/qb4c2/union-by-rank",target:"_blank",rel:"noopener noreferrer"}},[e._v("合并树状结构"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/Q9CVI/path-compression",target:"_blank",rel:"noopener noreferrer"}},[e._v("路径压缩"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/GQQLN/analysis-optional",target:"_blank",rel:"noopener noreferrer"}},[e._v("分析选项"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("动态规划的更多内容")]),e._v(" (视频)")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=OQ5jsbhAv_M&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=19",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.006: 动态规划 I: 斐波那契数列, 最短路径"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=ENyox7kNKeY&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=20",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.006: 动态规划 II: 文本匹配, 二十一点/黑杰克"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=ocZMDMZwhCY&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=21",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.006: 动态规划 III: 最优加括号方式, 最小编辑距离, 背包问题"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=tp4_UXaVyx8&index=22&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.006: 动态规划 IV: 吉他指法，拓扑，超级马里奥."),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=Tw1k46ywN6E&index=14&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.046: 动态规划: 动态规划进阶"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=NzgFUwOaoIw&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=15",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.046: 动态规划: 所有点对最短路径"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=krZI60lKPek&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=12",target:"_blank",rel:"noopener noreferrer"}},[e._v("6.046: 动态规划: 更多示例"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("图形处理进阶")]),e._v(" (视频)")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=mUBmcbbJNf4&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=27",target:"_blank",rel:"noopener noreferrer"}},[e._v("异步分布式算法: 对称性破缺，最小生成树"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=kQ-UQAzcnzA&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=28",target:"_blank",rel:"noopener noreferrer"}},[e._v("异步分布式算法: 最小生成树"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("MIT "),r("strong",[e._v("概率论")]),e._v(" (过于数学，进度缓慢，但这对于数学的东西却是必要之恶) (视频):")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=SmFwFdESMHI&index=18&list=PLB7540DEDD482705B",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.042J - 概率论概述"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=E6FbvM-FGZ8&index=19&list=PLB7540DEDD482705B",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.042J - 条件概率 Probability"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=l1BCv3qqW4A&index=20&list=PLB7540DEDD482705B",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.042J - 独立"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=MOfhhFaQdjw&list=PLB7540DEDD482705B&index=21",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.042J - 随机变量"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=gGlMSe7uEkA&index=22&list=PLB7540DEDD482705B",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.042J - 期望 I"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=oI9fMUqgfxY&index=23&list=PLB7540DEDD482705B",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.042J - 期望 II"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=q4mwO2qS2z4&index=24&list=PLB7540DEDD482705B",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.042J - 大偏差"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=56iFMY8QW2k&list=PLB7540DEDD482705B&index=25",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.042J - 随机游走"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=oDniZCmNmNw&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=19",target:"_blank",rel:"noopener noreferrer"}},[e._v("Simonson: 近似算法 (视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("字符串匹配")])]),e._v(" "),r("ul",[r("li",[e._v("Rabin-Karp（视频）\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/c0Qkw/rabin-karps-algorithm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rabin Karps 算法"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/nYrc8/optimization-precomputation",target:"_blank",rel:"noopener noreferrer"}},[e._v("预计算"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/data-structures/lecture/h4ZLc/optimization-implementation-and-analysis",target:"_blank",rel:"noopener noreferrer"}},[e._v("优化：实施和分析"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=BRO7mVIFt08&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=9",target:"_blank",rel:"noopener noreferrer"}},[e._v("表翻倍，Karp-Rabin"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=w6nuXg0BISo&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=32",target:"_blank",rel:"noopener noreferrer"}},[e._v("滚动哈希，摊销分析"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("Knuth-Morris-Pratt (KMP)：\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=5i7oKodCRJo",target:"_blank",rel:"noopener noreferrer"}},[e._v("Knuth-Morris-Pratt（KMP）字符串匹配算法"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("Boyer–Moore 字符串搜索算法\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string_search_algorithm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Boyer–Moore 字符串搜索算法"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=QDZpzctPf10",target:"_blank",rel:"noopener noreferrer"}},[e._v("高级字符串搜索Boyer-Moore-Horspool算法（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/algorithms-on-strings/home/week/1",target:"_blank",rel:"noopener noreferrer"}},[e._v("Coursera：字符串算法"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("刚开始时很棒，但是当它超过 KMP 时，它变得比需要复杂得多")]),e._v(" "),r("li",[e._v("很好的字典树解释")]),e._v(" "),r("li",[e._v("可以跳过")])])])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("排序")])]),e._v(" "),r("ul",[r("li",[e._v("斯坦福大学关于排序算法的视频:\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=ENp00xylP7c&index=15&list=PLFE6E58F856038C69",target:"_blank",rel:"noopener noreferrer"}},[e._v("课程 15 | 编程抽象（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=y4M9IVgrVKo&index=16&list=PLFE6E58F856038C69",target:"_blank",rel:"noopener noreferrer"}},[e._v("课程 16 | 编程抽象（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("Shai Simonson 视频，"),r("a",{attrs:{href:"http://www.aduni.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aduni.org"),r("OutboundLink")],1),e._v(":\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=odNJmw5TOEE&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=2",target:"_blank",rel:"noopener noreferrer"}},[e._v("算法 - 排序 - 第二讲（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=hj8YKFTFKEE&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=3",target:"_blank",rel:"noopener noreferrer"}},[e._v("算法 - 排序2 - 第三讲（视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("Steven Skiena 关于排序的视频:\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=jUf-UQ3a0kg&list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx&index=8",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2020 - 归并排序/快速排序（视频）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=0ksyQKmre84&list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx&index=9",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSE373 2020 - 线性排序（视频）"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[r("p",[e._v("NAND 到 Tetris: "),r("a",{attrs:{href:"https://www.coursera.org/learn/build-a-computer",target:"_blank",rel:"noopener noreferrer"}},[e._v("从第一原理构建现代计算机"),r("OutboundLink")],1)])])]),e._v(" "),r("h2",{attrs:{id:"视频系列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#视频系列"}},[e._v("#")]),e._v(" 视频系列")]),e._v(" "),r("p",[e._v("坐下来，尽情享受。")]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr",target:"_blank",rel:"noopener noreferrer"}},[e._v("个人的动态规划问题列表 (都是短视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL038BE01D3BAEFDB0",target:"_blank",rel:"noopener noreferrer"}},[e._v("x86 架构，汇编，应用程序 (11 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLE7DDD91010BC51F8",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 18.06 线性代数，2005 年春季 (35 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL3B08AE665AB9002A",target:"_blank",rel:"noopener noreferrer"}},[e._v("绝妙的 MIT 微积分：单变量微积分"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=22hwcnXIGgk&list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx&index=1",target:"_blank",rel:"noopener noreferrer"}},[e._v("Skiena讲座来自《算法设计手册》- CSE373 2020 - 算法分析（26个视频）"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=mFPmKGIrQs4&list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd",target:"_blank",rel:"noopener noreferrer"}},[e._v("UC Berkeley 61B (2014 年春季): 数据结构 (25 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL4BBB74C7D2A1049C",target:"_blank",rel:"noopener noreferrer"}},[e._v("UC Berkeley 61B (2006 年秋季): 数据结构 (39 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=gJJeUFyuvvg&list=PL-XXv-cvA_iCl2-D-FS5mk0jFF6cYSJs_",target:"_blank",rel:"noopener noreferrer"}},[e._v("UC Berkeley 61C：计算机结构 (26 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO",target:"_blank",rel:"noopener noreferrer"}},[e._v("OOSE：使用 UML 和 Java 进行软件开发 (21 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.004: 计算结构 (49 视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL5PHm2jkkXmi5CxxI7b3JCL1TWybTDtKq",target:"_blank",rel:"noopener noreferrer"}},[e._v("卡內基梅隆大学 - 计算机架构讲座 (39 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=HtSuA80QTyo&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&nohtml5=False",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.006：算法介绍 (47 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=zm2VP0kHl1M&list=PL6535748F59DCA484",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.033：计算机系统工程 (22 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLUl4u3cNGP63gFHB6xb-kVBiQHYe_4hSi",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.034：人工智能，2010 年秋季 (30 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=L3LMbpZIKhQ&list=PLB7540DEDD482705B",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.042J：计算机科学数学, 2010 年秋季 (25 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=2P-yW7LQr08&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.046：算法设计与分析 (34 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=phxsQrZQupo&list=PL_2Bwul6T-A7OldmhGODImZL8KEVE38X7",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.050J：信息和熵, 2008 年春季 (19 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=T0yzrZL1py0&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&index=1",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.851：高等数据结构 (22 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL6ogFv-ieghdoGKGg2Bik3Gl1glBTEu8c",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.854: 高等算法, 2016 年春季 (24 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL2SOU6wwxB0uP4rJgf5ayhHWgw7akUWSf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Harvard COMPSCI 224：高级算法（25个视频）"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=GqmQg-cszw4&index=1&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT 6.858：计算机系统安全, 2014 年秋季"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL9D558D49CA734A02",target:"_blank",rel:"noopener noreferrer"}},[e._v("斯坦福: 编程范例 (27 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PL6N5qY2nvvJE8X75VkXglSrVhLv1tVcfy",target:"_blank",rel:"noopener noreferrer"}},[e._v("密码学导论，Christof Paar"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://www.crypto-textbook.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("课程网站以及幻灯片和问题集"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLLssT5z_DsK9JDLcT8T62VtzwyW9LNepV",target:"_blank",rel:"noopener noreferrer"}},[e._v("大数据 - 斯坦福大学 (94 个视频)"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.youtube.com/user/DrSaradaHerke/playlists?shelf_id=5&view=50&sort=dd",target:"_blank",rel:"noopener noreferrer"}},[e._v("图论，Sarada Herke（67个视频）"),r("OutboundLink")],1)])])]),e._v(" "),r("h2",{attrs:{id:"计算机科学课程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#计算机科学课程"}},[e._v("#")]),e._v(" 计算机科学课程")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/open-source-society/computer-science",target:"_blank",rel:"noopener noreferrer"}},[e._v("在线 CS 课程目录"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/prakhar1989/awesome-courses",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS 课程目录 (一些是在线讲座)"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"算法实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法实现"}},[e._v("#")]),e._v(" 算法实现")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://algs4.cs.princeton.edu/code",target:"_blank",rel:"noopener noreferrer"}},[e._v("普林斯顿大学的多算法实现"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"论文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#论文"}},[e._v("#")]),e._v(" 论文")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.cs.cmu.edu/~crary/819-f09/",target:"_blank",rel:"noopener noreferrer"}},[e._v("喜欢经典的论文？"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://spinroot.com/courses/summer/Papers/hoare_1978.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("1978: 通信顺序处理"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://godoc.org/github.com/thomas11/csp",target:"_blank",rel:"noopener noreferrer"}},[e._v("Go 实现"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"http://static.googleusercontent.com/media/research.google.com/en//archive/gfs-sosp2003.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("2003: The Google 文件系统"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("2012 年被 Colossus 取代了")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"http://static.googleusercontent.com/media/research.google.com/en//archive/mapreduce-osdi04.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("2004: MapReduce: Simplified Data Processing on Large Clusters"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("大多被云数据流取代了?")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://static.googleusercontent.com/media/research.google.com/en//archive/bigtable-osdi06.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("2006年：Bigtable：结构化数据的分布式存储系统"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://research.google.com/archive/chubby-osdi06.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("2006年：针对松散耦合的分布式系统的Chubby Lock服务"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://s3.amazonaws.com/AllThingsDistributed/sosp/amazon-dynamo-sosp2007.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("2007年：Dynamo：亚马逊的高可用键值存储"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("Dynamo论文启动了NoSQL革命")])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.akkadia.org/drepper/cpumemory.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("2007: 每个程序员都应该知道的内存知识 (非常长，作者建议跳过某些章节来阅读)"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("2012: AddressSanitizer: 快速的内存访问检查器:\n"),r("ul",[r("li",[r("a",{attrs:{href:"http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37752.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("论文"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.usenix.org/conference/atc12/technical-sessions/presentation/serebryany",target:"_blank",rel:"noopener noreferrer"}},[e._v("视频"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("2013: Spanner: Google 的分布式数据库:\n"),r("ul",[r("li",[r("a",{attrs:{href:"http://static.googleusercontent.com/media/research.google.com/en//archive/spanner-osdi2012.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("论文"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.usenix.org/node/170855",target:"_blank",rel:"noopener noreferrer"}},[e._v("视频"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43790.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("2015: Google的持续流水线"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/44686.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("2015: 大规模高可用性：构建Google广告数据基础设施"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43835.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("2015: 开发人员如何搜索代码：一个案例研究"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("更多论文： "),r("a",{attrs:{href:"https://github.com/0voice/computer_expert_paper",target:"_blank",rel:"noopener noreferrer"}},[e._v("1,000篇论文"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"license"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[e._v("#")]),e._v(" LICENSE")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/jwasham/coding-interview-university/blob/main/LICENSE.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("CC-BY-SA-4.0"),r("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=a.exports}}]);